






Started logging.

<<<
Content-Length: 3102

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":18256,"clientInfo":{"name":"vscode","version":"1.78.0"},"rootPath":"c:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","rootUri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS","name":"ELENKTIS_MEMFYS"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5391

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","languageId":"cpp","version":31,"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW && pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}}Content-Length: 290

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":13,"character":21},"end":{"line":13,"character":21}},"context":{"diagnostics":[]}}}Content-Length: 187

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 3910

{"jsonrpc":"2.0","id":2,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 227

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":7,"character":22}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":3,"result":[]}
<<<
Content-Length: 288

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":7,"character":22},"end":{"line":7,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}
<<<
Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":2328,"maxSize":30720},{"name":"data","size":31,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703748103","extra.time.utc=1703744503","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":57,"character":2}}}
>>>
Content-Length: 253

{"jsonrpc":"2.0","id":5,"result":{"contents":{"kind":"markdown","value":"### function `checkButtonPress`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid checkButtonPress()\n```"},"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":18}}}}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":57,"character":1}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 215

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":1}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
<<<
Content-Length: 289

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":109,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 289

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":110,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":111,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":10,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":111,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":11,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":111,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":12,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":111,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":13,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":122,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":14,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":123,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":15,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":136,"character":4}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":16,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":148,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":17,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":147,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":18,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":146,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}
<<<
Content-Length: 9073

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":32},"contentChanges":[{"range":{"start":{"line":146,"character":2},"end":{"line":146,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":145,"character":2},"end":{"line":145,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":144,"character":2},"end":{"line":144,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":143,"character":2},"end":{"line":143,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":142,"character":2},"end":{"line":142,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":141,"character":2},"end":{"line":141,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":140,"character":2},"end":{"line":140,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":139,"character":2},"end":{"line":139,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":138,"character":2},"end":{"line":138,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":137,"character":2},"end":{"line":137,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":136,"character":2},"end":{"line":136,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":135,"character":2},"end":{"line":135,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":134,"character":2},"end":{"line":134,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":133,"character":2},"end":{"line":133,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":132,"character":2},"end":{"line":132,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":131,"character":2},"end":{"line":131,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":130,"character":2},"end":{"line":130,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":129,"character":2},"end":{"line":129,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":128,"character":2},"end":{"line":128,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":127,"character":2},"end":{"line":127,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":126,"character":2},"end":{"line":126,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":125,"character":2},"end":{"line":125,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":124,"character":2},"end":{"line":124,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":123,"character":2},"end":{"line":123,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":122,"character":2},"end":{"line":122,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":121,"character":2},"end":{"line":121,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":120,"character":2},"end":{"line":120,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":119,"character":2},"end":{"line":119,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":118,"character":2},"end":{"line":118,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":117,"character":2},"end":{"line":117,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":116,"character":2},"end":{"line":116,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":115,"character":2},"end":{"line":115,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":114,"character":2},"end":{"line":114,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":113,"character":2},"end":{"line":113,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":112,"character":2},"end":{"line":112,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":111,"character":2},"end":{"line":111,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":109,"character":2},"end":{"line":109,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":107,"character":2},"end":{"line":107,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":106,"character":2},"end":{"line":106,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":104,"character":2},"end":{"line":104,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":103,"character":2},"end":{"line":103,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":101,"character":2},"end":{"line":101,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":100,"character":2},"end":{"line":100,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":99,"character":2},"end":{"line":99,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":98,"character":2},"end":{"line":98,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":95,"character":2},"end":{"line":95,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":93,"character":2},"end":{"line":93,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":91,"character":2},"end":{"line":91,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":90,"character":2},"end":{"line":90,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":88,"character":2},"end":{"line":88,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":84,"character":2},"end":{"line":84,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":82,"character":2},"end":{"line":82,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":81,"character":2},"end":{"line":81,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":80,"character":2},"end":{"line":80,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":79,"character":2},"end":{"line":79,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":78,"character":2},"end":{"line":78,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":77,"character":2},"end":{"line":77,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":76,"character":2},"end":{"line":76,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":73,"character":2},"end":{"line":73,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":72,"character":2},"end":{"line":72,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":71,"character":2},"end":{"line":71,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":70,"character":2},"end":{"line":70,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":69,"character":2},"end":{"line":69,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":68,"character":2},"end":{"line":68,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":67,"character":2},"end":{"line":67,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":66,"character":2},"end":{"line":66,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":65,"character":2},"end":{"line":65,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":2}},"rangeLength":0,"text":"// "}]}}Content-Length: 188

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 290

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":146,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":20,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":21,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":22,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5618

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":32},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":146,"character":6},"end":{"line":146,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":23,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":55,"character":13},"end":{"line":55,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":24,"result":[]}
<<<
Content-Length: 317

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":33},"contentChanges":[{"range":{"start":{"line":55,"character":13},"end":{"line":55,"character":13}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 188

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3911

{"jsonrpc":"2.0","id":25,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":26,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5622

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":33},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  \n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":34},"contentChanges":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":2}},"rangeLength":0,"text":"d"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3911

{"jsonrpc":"2.0","id":27,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":28,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 249

{"jsonrpc":"2.0","id":29,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":3},"context":{"triggerKind":1}}}Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 24375

{"jsonrpc":"2.0","id":29,"result":{"isIncomplete":true,"items":[{"label":" debounce","kind":6,"detail":"uint8_t","sortText":"404db22cdebounce","filterText":"debounce","insertText":"debounce","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"debounce"}},{"label":" DEFAULT","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eDEFAULT","filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DEFAULT"}},{"label":" DEG_TO_RAD","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eDEG_TO_RAD","filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DEG_TO_RAD"}},{"label":" DISPLAY","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89eDISPLAY","filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DISPLAY"}},{"label":" degrees(rad)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89edegrees","filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"degrees(${1:rad})"}},{"label":" digitalPinToBitMask(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89edigitalPinToBitMask","filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalPinToBitMask(${1:P})"}},{"label":" digitalPinToPort(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89edigitalPinToPort","filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalPinToPort(${1:P})"}},{"label":" digitalPinToTimer(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89edigitalPinToTimer","filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalPinToTimer(${1:P})"}},{"label":" DTOSTR_ALWAYS_SIGN","kind":1,"sortText":"40821470DTOSTR_ALWAYS_SIGN","filterText":"DTOSTR_ALWAYS_SIGN","insertText":"DTOSTR_ALWAYS_SIGN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DTOSTR_ALWAYS_SIGN"}},{"label":" DTOSTR_PLUS_SIGN","kind":1,"sortText":"40821470DTOSTR_PLUS_SIGN","filterText":"DTOSTR_PLUS_SIGN","insertText":"DTOSTR_PLUS_SIGN","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DTOSTR_PLUS_SIGN"}},{"label":" DTOSTR_UPPERCASE","kind":1,"sortText":"40821470DTOSTR_UPPERCASE","filterText":"DTOSTR_UPPERCASE","insertText":"DTOSTR_UPPERCASE","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DTOSTR_UPPERCASE"}},{"label":"•DEC","kind":1,"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"sortText":"409525ebDEC","filterText":"DEC","insertText":"DEC","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DEC"}},{"label":" digitalWrite(uint8_t pin, uint8_t val)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40960686digitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})"}},{"label":" DD0","kind":1,"sortText":"409f9b1fDD0","filterText":"DD0","insertText":"DD0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DD0"}},{"label":" DD1","kind":1,"sortText":"409f9b1fDD1","filterText":"DD1","insertText":"DD1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DD1"}},{"label":" DD2","kind":1,"sortText":"409f9b1fDD2","filterText":"DD2","insertText":"DD2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DD2"}},{"label":" DD3","kind":1,"sortText":"409f9b1fDD3","filterText":"DD3","insertText":"DD3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DD3"}},{"label":" DD4","kind":1,"sortText":"409f9b1fDD4","filterText":"DD4","insertText":"DD4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DD4"}},{"label":" DD5","kind":1,"sortText":"409f9b1fDD5","filterText":"DD5","insertText":"DD5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DD5"}},{"label":" DD6","kind":1,"sortText":"409f9b1fDD6","filterText":"DD6","insertText":"DD6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DD6"}},{"label":" DD7","kind":1,"sortText":"409f9b1fDD7","filterText":"DD7","insertText":"DD7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DD7"}},{"label":" DDB0","kind":1,"sortText":"409f9b1fDDB0","filterText":"DDB0","insertText":"DDB0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDB0"}},{"label":" DDB1","kind":1,"sortText":"409f9b1fDDB1","filterText":"DDB1","insertText":"DDB1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDB1"}},{"label":" DDB2","kind":1,"sortText":"409f9b1fDDB2","filterText":"DDB2","insertText":"DDB2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDB2"}},{"label":" DDB3","kind":1,"sortText":"409f9b1fDDB3","filterText":"DDB3","insertText":"DDB3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDB3"}},{"label":" DDB4","kind":1,"sortText":"409f9b1fDDB4","filterText":"DDB4","insertText":"DDB4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDB4"}},{"label":" DDB5","kind":1,"sortText":"409f9b1fDDB5","filterText":"DDB5","insertText":"DDB5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDB5"}},{"label":" DDB6","kind":1,"sortText":"409f9b1fDDB6","filterText":"DDB6","insertText":"DDB6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDB6"}},{"label":" DDB7","kind":1,"sortText":"409f9b1fDDB7","filterText":"DDB7","insertText":"DDB7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDB7"}},{"label":" DDC0","kind":1,"sortText":"409f9b1fDDC0","filterText":"DDC0","insertText":"DDC0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDC0"}},{"label":" DDC1","kind":1,"sortText":"409f9b1fDDC1","filterText":"DDC1","insertText":"DDC1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDC1"}},{"label":" DDC2","kind":1,"sortText":"409f9b1fDDC2","filterText":"DDC2","insertText":"DDC2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDC2"}},{"label":" DDC3","kind":1,"sortText":"409f9b1fDDC3","filterText":"DDC3","insertText":"DDC3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDC3"}},{"label":" DDC4","kind":1,"sortText":"409f9b1fDDC4","filterText":"DDC4","insertText":"DDC4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDC4"}},{"label":" DDC5","kind":1,"sortText":"409f9b1fDDC5","filterText":"DDC5","insertText":"DDC5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDC5"}},{"label":" DDC6","kind":1,"sortText":"409f9b1fDDC6","filterText":"DDC6","insertText":"DDC6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDC6"}},{"label":" DDD0","kind":1,"sortText":"409f9b1fDDD0","filterText":"DDD0","insertText":"DDD0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDD0"}},{"label":" DDD1","kind":1,"sortText":"409f9b1fDDD1","filterText":"DDD1","insertText":"DDD1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDD1"}},{"label":" DDD2","kind":1,"sortText":"409f9b1fDDD2","filterText":"DDD2","insertText":"DDD2","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDD2"}},{"label":" DDD3","kind":1,"sortText":"409f9b1fDDD3","filterText":"DDD3","insertText":"DDD3","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDD3"}},{"label":" DDD4","kind":1,"sortText":"409f9b1fDDD4","filterText":"DDD4","insertText":"DDD4","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDD4"}},{"label":" DDD5","kind":1,"sortText":"409f9b1fDDD5","filterText":"DDD5","insertText":"DDD5","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDD5"}},{"label":" DDD6","kind":1,"sortText":"409f9b1fDDD6","filterText":"DDD6","insertText":"DDD6","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDD6"}},{"label":" DDD7","kind":1,"sortText":"409f9b1fDDD7","filterText":"DDD7","insertText":"DDD7","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDD7"}},{"label":" DDRB","kind":1,"sortText":"409f9b1fDDRB","filterText":"DDRB","insertText":"DDRB","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDRB"}},{"label":" DDRC","kind":1,"sortText":"409f9b1fDDRC","filterText":"DDRC","insertText":"DDRC","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDRC"}},{"label":" DDRD","kind":1,"sortText":"409f9b1fDDRD","filterText":"DDRD","insertText":"DDRD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DDRD"}},{"label":" DIDR0","kind":1,"sortText":"409f9b1fDIDR0","filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DIDR0"}},{"label":" DIDR1","kind":1,"sortText":"409f9b1fDIDR1","filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DIDR1"}},{"label":" DOR0","kind":1,"sortText":"409f9b1fDOR0","filterText":"DOR0","insertText":"DOR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DOR0"}},{"label":" DORD","kind":1,"sortText":"409f9b1fDORD","filterText":"DORD","insertText":"DORD","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"DORD"}},{"label":" digitalPinHasPWM(p)","kind":1,"sortText":"409f9b1fdigitalPinHasPWM","filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalPinHasPWM(${1:p})"}},{"label":" digitalPinToInterrupt(p)","kind":1,"sortText":"409f9b1fdigitalPinToInterrupt","filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalPinToInterrupt(${1:p})"}},{"label":" digitalPinToPCICR(p)","kind":1,"sortText":"409f9b1fdigitalPinToPCICR","filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalPinToPCICR(${1:p})"}},{"label":" digitalPinToPCICRbit(p)","kind":1,"sortText":"409f9b1fdigitalPinToPCICRbit","filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalPinToPCICRbit(${1:p})"}},{"label":" digitalPinToPCMSK(p)","kind":1,"sortText":"409f9b1fdigitalPinToPCMSK","filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalPinToPCMSK(${1:p})"}},{"label":" digitalPinToPCMSKbit(p)","kind":1,"sortText":"409f9b1fdigitalPinToPCMSKbit","filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalPinToPCMSKbit(${1:p})"}},{"label":" digitalRead(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40a93179digitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digitalRead(${1:uint8_t pin})"}},{"label":" decltype(expression)","kind":15,"sortText":"40a9a1f8decltype","filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"decltype(${0:expression})"}},{"label":" delete [] expression","kind":15,"detail":"void","sortText":"40a9a1f8delete","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"delete [] ${0:expression}"}},{"label":" delete expression","kind":15,"detail":"void","sortText":"40a9a1f8delete","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"delete ${0:expression}"}},{"label":" do {statements}while (expression)","kind":15,"sortText":"40a9a1f8do","filterText":"do","insertText":"do {\n${1:statements}\n}while (${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"do {\n${1:statements}\n}while (${0:expression})"}},{"label":" double","kind":14,"sortText":"40a9a1f8double","filterText":"double","insertText":"double","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"double"}},{"label":" dynamic_cast\u003ctype\u003e(expression)","kind":15,"sortText":"40a9a1f8dynamic_cast","filterText":"dynamic_cast","insertText":"dynamic_cast\u003c${1:type}\u003e(${0:expression})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"dynamic_cast\u003c${1:type}\u003e(${0:expression})"}},{"label":" div_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"sortText":"40d6b808div_t","filterText":"div_t","insertText":"div_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"div_t"}},{"label":" digital_pin_to_bit_mask_PGM","kind":6,"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"sortText":"40db701cdigital_pin_to_bit_mask_PGM","filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digital_pin_to_bit_mask_PGM"}},{"label":" digital_pin_to_port_PGM","kind":6,"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40db701cdigital_pin_to_port_PGM","filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digital_pin_to_port_PGM"}},{"label":" digital_pin_to_timer_PGM","kind":6,"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ee1e7edigital_pin_to_timer_PGM","filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"digital_pin_to_timer_PGM"}},{"label":" div(int num, int denom)","kind":3,"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"sortText":"40fd1dd8div","filterText":"div","insertText":"div(${1:int num}, ${2:int denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"div(${1:int num}, ${2:int denom})"}},{"label":" dtostre(double val, char *s, unsigned char prec, unsigned char flags)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostre() function converts the double value passed in \\\\c val into an ASCII representation that will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision \\\\c prec; if the precision is zero, no decimal-point character appears. If \\\\c flags has the DTOSTR_UPPERCASE bit set, the letter \\\\c 'E' (rather than \\\\c 'e' ) will be used to introduce the exponent. The exponent always contains two digits; if the value is zero, the exponent is \\\\c \"00\".  \nIf \\\\c flags has the DTOSTR_ALWAYS_SIGN bit set, a space character will be placed into the leading position for positive numbers.  \nIf \\\\c flags has the DTOSTR_PLUS_SIGN bit set, a plus sign will be used instead of a space character in this case.  \nThe dtostre() function returns the pointer to the converted string \\\\c s."},"sortText":"40fd1dd8dtostre","filterText":"dtostre","insertText":"dtostre(${1:double val}, ${2:char *s}, ${3:unsigned char prec}, ${4:unsigned char flags})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"dtostre(${1:double val}, ${2:char *s}, ${3:unsigned char prec}, ${4:unsigned char flags})"}},{"label":" delay(unsigned long ms)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ff72f2delay","filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"delay(${1:unsigned long ms})"}},{"label":" delayMicroseconds(unsigned int us)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nDelay for the given number of microseconds. Assumes a 1, 8, 12, 16, 20 or 24 MHz clock."},"sortText":"40ff72f2delayMicroseconds","filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"delayMicroseconds(${1:unsigned int us})"}},{"label":" detachInterrupt(uint8_t interruptNum)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ff72f2detachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"detachInterrupt(${1:uint8_t interruptNum})"}},{"label":" dtostrf(double val, signed char width, unsigned char prec, char *s)","kind":3,"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostrf() function converts the double value passed in \\\\c val into an ASCII representationthat will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddd\". The minimum field width of the output string (including the possible \\\\c '.' and the possible sign for negative values) is given in \\\\c width, and \\\\c prec determines the number of digits after the decimal sign. \\\\c width is signed value,  \nnegative for left adjustment.  \nThe dtostrf() function returns the pointer to the converted string \\\\c s."},"sortText":"4100bc4ddtostrf","filterText":"dtostrf","insertText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *s})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *s})"}},{"label":"•isDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a digit (0 through 9)."},"sortText":"80000000isDigit","filterText":"isDigit","insertText":"isDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"isDigit(${1:int c})"}},{"label":"•operator delete(…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003cnew\u003e`"},"sortText":"80000000operator delete","filterText":"operator delete","insertText":"operator delete($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"operator delete($0)"}},{"label":"•operator delete[](…)","kind":3,"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `\u003cnew\u003e`"},"sortText":"80000000operator delete[]","filterText":"operator delete[]","insertText":"operator delete[]($0)","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"operator delete[]($0)"}},{"label":" wdt_disable()","kind":3,"detail":"void","sortText":"80000000wdt_disable","filterText":"wdt_disable","insertText":"wdt_disable()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":3}},"newText":"wdt_disable()"}}]}}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":35},"contentChanges":[{"range":{"start":{"line":56,"character":3},"end":{"line":56,"character":3}},"rangeLength":0,"text":"i"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 3911

{"jsonrpc":"2.0","id":30,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":31,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 249

{"jsonrpc":"2.0","id":32,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":4},"context":{"triggerKind":3}}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":36},"contentChanges":[{"range":{"start":{"line":56,"character":4},"end":{"line":56,"character":4}},"rangeLength":0,"text":"g"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}
>>>
Content-Length: 7956

{"jsonrpc":"2.0","id":32,"result":{"isIncomplete":false,"items":[{"label":" digitalPinToBitMask(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89edigitalPinToBitMask","filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalPinToBitMask(${1:P})"}},{"label":" digitalPinToPort(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89edigitalPinToPort","filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalPinToPort(${1:P})"}},{"label":" digitalPinToTimer(P)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4070a89edigitalPinToTimer","filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalPinToTimer(${1:P})"}},{"label":" DISPLAY","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40852714DISPLAY","filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"DISPLAY"}},{"label":" digitalWrite(uint8_t pin, uint8_t val)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40960686digitalWrite","filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})"}},{"label":" digitalPinHasPWM(p)","kind":1,"sortText":"409f9b1fdigitalPinHasPWM","filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalPinHasPWM(${1:p})"}},{"label":" digitalPinToInterrupt(p)","kind":1,"sortText":"409f9b1fdigitalPinToInterrupt","filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalPinToInterrupt(${1:p})"}},{"label":" digitalPinToPCICR(p)","kind":1,"sortText":"409f9b1fdigitalPinToPCICR","filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalPinToPCICR(${1:p})"}},{"label":" digitalPinToPCICRbit(p)","kind":1,"sortText":"409f9b1fdigitalPinToPCICRbit","filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalPinToPCICRbit(${1:p})"}},{"label":" digitalPinToPCMSK(p)","kind":1,"sortText":"409f9b1fdigitalPinToPCMSK","filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalPinToPCMSK(${1:p})"}},{"label":" digitalPinToPCMSKbit(p)","kind":1,"sortText":"409f9b1fdigitalPinToPCMSKbit","filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalPinToPCMSKbit(${1:p})"}},{"label":" digitalRead(uint8_t pin)","kind":3,"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40a93179digitalRead","filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digitalRead(${1:uint8_t pin})"}},{"label":" DIDR0","kind":1,"sortText":"40bba7bbDIDR0","filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"DIDR0"}},{"label":" DIDR1","kind":1,"sortText":"40bba7bbDIDR1","filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"DIDR1"}},{"label":" div_t","kind":8,"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"sortText":"40d6b808div_t","filterText":"div_t","insertText":"div_t","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"div_t"}},{"label":" digital_pin_to_bit_mask_PGM","kind":6,"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"sortText":"40db701cdigital_pin_to_bit_mask_PGM","filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digital_pin_to_bit_mask_PGM"}},{"label":" digital_pin_to_port_PGM","kind":6,"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40db701cdigital_pin_to_port_PGM","filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digital_pin_to_port_PGM"}},{"label":" digital_pin_to_timer_PGM","kind":6,"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40ee1e7edigital_pin_to_timer_PGM","filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"digital_pin_to_timer_PGM"}},{"label":" div(int num, int denom)","kind":3,"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"sortText":"40fd1dd8div","filterText":"div","insertText":"div(${1:int num}, ${2:int denom})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"div(${1:int num}, ${2:int denom})"}},{"label":" detachInterrupt(uint8_t interruptNum)","kind":3,"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"413f2c6bdetachInterrupt","filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"detachInterrupt(${1:uint8_t interruptNum})"}},{"label":"•isDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a digit (0 through 9)."},"sortText":"41bbacc4isDigit","filterText":"isDigit","insertText":"isDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"isDigit(${1:int c})"}},{"label":" wdt_disable()","kind":3,"detail":"void","sortText":"41d5bed2wdt_disable","filterText":"wdt_disable","insertText":"wdt_disable()","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":4}},"newText":"wdt_disable()"}}]}}Content-Length: 3911

{"jsonrpc":"2.0","id":33,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":34,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":37},"contentChanges":[{"range":{"start":{"line":56,"character":5},"end":{"line":56,"character":5}},"rangeLength":0,"text":"i"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":38},"contentChanges":[{"range":{"start":{"line":56,"character":6},"end":{"line":56,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":37,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":35,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":36,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":37,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":38,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 289

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":39,"result":[]}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":39},"contentChanges":[{"range":{"start":{"line":56,"character":7},"end":{"line":56,"character":7}},"rangeLength":0,"text":"a"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":40,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":41,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":40},"contentChanges":[{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":8}},"rangeLength":0,"text":"l"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":42,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":43,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 289

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":44,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5629

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":40},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digital\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":41},"contentChanges":[{"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":9}},"rangeLength":0,"text":"W"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":45,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":46,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":10},"end":{"line":56,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":47,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 5630

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":41},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalW\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}Content-Length: 350

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":42},"contentChanges":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":10}},"rangeLength":8,"text":"digitalWrite(uint8_t pin, uint8_t val)"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"12","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3911

{"jsonrpc":"2.0","id":48,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":49,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 41

{"jsonrpc":"2.0","id":"12","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":50,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"13","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"13","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5660

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":42},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(uint8_t pin, uint8_t val)\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"14","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"14","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 315

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":43},"contentChanges":[{"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":26}},"rangeLength":11,"text":"l"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"15","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3911

{"jsonrpc":"2.0","id":51,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":52,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"15","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":53,"result":[]}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":44},"contentChanges":[{"range":{"start":{"line":56,"character":16},"end":{"line":56,"character":16}},"rangeLength":0,"text":"i"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":54,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":55,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":54}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":45},"contentChanges":[{"range":{"start":{"line":56,"character":17},"end":{"line":56,"character":17}},"rangeLength":0,"text":"g"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":56,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":57,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":56}}Content-Length: 291

{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":18},"end":{"line":56,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":58,"result":[]}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":46},"contentChanges":[{"range":{"start":{"line":56,"character":18},"end":{"line":56,"character":18}},"rangeLength":0,"text":"h"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":60,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":59,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":60,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":59}}Content-Length: 291

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":61,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"16","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"16","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5653

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":46},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(ligh, uint8_t val)\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":47},"contentChanges":[{"range":{"start":{"line":56,"character":19},"end":{"line":56,"character":19}},"rangeLength":0,"text":"t"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":62,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":62,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":63,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":62}}Content-Length: 291

{"jsonrpc":"2.0","id":64,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":64,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":48},"contentChanges":[{"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"rangeLength":0,"text":"2"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":65,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":66,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":65}}Content-Length: 291

{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":67,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"17","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"17","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5655

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":48},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light2, uint8_t val)\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"18","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"18","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"19","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"19","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":68,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":32}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":68,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":69,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":33}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":69,"result":null}
<<<
Content-Length: 229

{"jsonrpc":"2.0","id":70,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":34}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":70,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":71,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":34},"end":{"line":56,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":71,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":72,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":72,"result":[]}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":73,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":22}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":73,"result":null}
<<<
Content-Length: 315

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":49},"contentChanges":[{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":34}},"rangeLength":11,"text":"h"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":74}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":74,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":75,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":50},"contentChanges":[{"range":{"start":{"line":56,"character":24},"end":{"line":56,"character":24}},"rangeLength":0,"text":"i"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":76,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":76,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":77,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":76}}Content-Length: 291

{"jsonrpc":"2.0","id":78,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":78,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"20","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"20","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5646

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":50},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light2, hi)\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":51},"contentChanges":[{"range":{"start":{"line":56,"character":24},"end":{"line":56,"character":25}},"rangeLength":1,"text":""}]}}Content-Length: 188

{"jsonrpc":"2.0","id":79,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":80,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":79}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":79,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":80,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":52},"contentChanges":[{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 188

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":82,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":81}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":81,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":82,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":83,"result":[]}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":53},"contentChanges":[{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":23}},"rangeLength":0,"text":"H"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":85,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":84,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":85,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":84}}Content-Length: 250

{"jsonrpc":"2.0","id":86,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":24},"context":{"triggerKind":1}}}
>>>
Content-Length: 4316

{"jsonrpc":"2.0","id":86,"result":{"isIncomplete":true,"items":[{"label":" HALF_PI","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22HALF_PI","filterText":"HALF_PI","insertText":"HALF_PI","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"HALF_PI"}},{"label":" HIGH","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22HIGH","filterText":"HIGH","insertText":"HIGH","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"HIGH"}},{"label":" highByte(w)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22highByte","filterText":"highByte","insertText":"highByte(${1:w})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"highByte(${1:w})"}},{"label":"•HAVE_HWSERIAL0","kind":1,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40af1a71HAVE_HWSERIAL0","filterText":"HAVE_HWSERIAL0","insertText":"HAVE_HWSERIAL0","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"HAVE_HWSERIAL0"}},{"label":" hypotf","kind":1,"sortText":"40af1a71hypotf","filterText":"hypotf","insertText":"hypotf","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"hypotf"}},{"label":"•HEX","kind":1,"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"sortText":"40b04affHEX","filterText":"HEX","insertText":"HEX","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"HEX"}},{"label":" HFUSE_DEFAULT","kind":1,"sortText":"40bfe344HFUSE_DEFAULT","filterText":"HFUSE_DEFAULT","insertText":"HFUSE_DEFAULT","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"HFUSE_DEFAULT"}},{"label":"•HardwareSerial","kind":7,"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"sortText":"40e93f45HardwareSerial","filterText":"HardwareSerial","insertText":"HardwareSerial","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"HardwareSerial"}},{"label":" hypot(double x, double y)","kind":3,"detail":"double","documentation":{"kind":"markdown","value":"The hypot() function returns \\\u003cem\u003esqrt(\\_\\_x\\*\\_\\_x + \\_\\_y\\*\\_\\_y)\\\u003c/em\u003e. This is the length of the hypotenuse of a right triangle with sides of length \\\\a \\_\\_x and \\\\a \\_\\_y, or the distance of the point (\\\\a \\_\\_x, \\\\a \\_\\_y) from the origin. Using this function instead of the direct formula is wise, since the error is much smaller. No underflow with small \\\\a \\_\\_x and \\\\a \\_\\_y. No overflow if result is in range."},"sortText":"411adc9dhypot","filterText":"hypot","insertText":"hypot(${1:double x}, ${2:double y})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"hypot(${1:double x}, ${2:double y})"}},{"label":"•isHexadecimalDigit(int c)","kind":3,"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"sortText":"80000000isHexadecimalDigit","filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"isHexadecimalDigit(${1:int c})"}},{"label":"•std::new_handler","kind":8,"documentation":{"kind":"markdown","value":"From `\u003cnew\u003e`  \nThese are not actually implemented, to prevent overhead and complexity. They are still declared to allow implementing them in user code if needed."},"sortText":"80000000new_handler","filterText":"new_handler","insertText":"std::new_handler","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":24}},"newText":"std::new_handler"}}]}}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":54},"contentChanges":[{"range":{"start":{"line":56,"character":24},"end":{"line":56,"character":24}},"rangeLength":0,"text":"I"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":88,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":87}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":87,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":88,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 250

{"jsonrpc":"2.0","id":89,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":25},"context":{"triggerKind":3}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":88}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":55},"contentChanges":[{"range":{"start":{"line":56,"character":25},"end":{"line":56,"character":25}},"rangeLength":0,"text":"G"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":90,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":90}}
>>>
Content-Length: 684

{"jsonrpc":"2.0","id":89,"result":{"isIncomplete":false,"items":[{"label":" HIGH","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"4088ba22HIGH","filterText":"HIGH","insertText":"HIGH","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":25}},"newText":"HIGH"}},{"label":" highByte(w)","kind":1,"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"sortText":"40a7a2dehighByte","filterText":"highByte","insertText":"highByte(${1:w})","insertTextFormat":2,"textEdit":{"range":{"start":{"line":56,"character":23},"end":{"line":56,"character":25}},"newText":"highByte(${1:w})"}}]}}Content-Length: 3911

{"jsonrpc":"2.0","id":90,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":91,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":91}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":56},"contentChanges":[{"range":{"start":{"line":56,"character":26},"end":{"line":56,"character":26}},"rangeLength":0,"text":"H"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":92,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":92}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":92,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":93,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":27},"end":{"line":56,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":94,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"21","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"21","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5648

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":56},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light2, HIGH)\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}Content-Length: 291

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":28},"end":{"line":56,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":95,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":57},"contentChanges":[{"range":{"start":{"line":56,"character":28},"end":{"line":56,"character":28}},"rangeLength":0,"text":";"}]}}Content-Length: 188

{"jsonrpc":"2.0","id":96,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 188

{"jsonrpc":"2.0","id":97,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":96}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"22","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3911

{"jsonrpc":"2.0","id":96,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":97,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"22","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":98,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":29},"end":{"line":56,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":98,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"23","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"23","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5649

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":57},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light2, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"24","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"24","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":52,"character":16}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":99,"result":null}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":99}}Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":1164,"maxSize":30720},{"name":"data","size":22,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703748349","extra.time.utc=1703744749","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"25","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"25","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"26","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"26","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":100,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":49,"character":9}}}
>>>
Content-Length: 243

{"jsonrpc":"2.0","id":100,"result":{"contents":{"kind":"markdown","value":"### variable `pump2state`  \n\n---\nType: `bool`  \n\n---\n```cpp\nbool pump2state\n```"},"range":{"start":{"line":49,"character":2},"end":{"line":49,"character":12}}}}
<<<
Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":1164,"maxSize":30720},{"name":"data","size":22,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703748374","extra.time.utc=1703744774","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"27","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"27","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"28","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"28","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":101,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":16}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":101,"result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":102,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":18}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":102,"result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":103,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":20}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":103,"result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}}}}
<<<
Content-Length: 230

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":20}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":104,"result":[]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":105,"result":[]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":106,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":106,"result":[]}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":107,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":21}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":107,"result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}}}}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":58},"contentChanges":[{"range":{"start":{"line":56,"character":20},"end":{"line":56,"character":21}},"rangeLength":1,"text":"1"}]}}Content-Length: 189

{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":109,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":108}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":108,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":109,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 251

{"jsonrpc":"2.0","id":110,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":21},"context":{"triggerKind":1}}}
>>>
Content-Length: 300

{"jsonrpc":"2.0","id":110,"result":{"isIncomplete":false,"items":[{"label":" light1","kind":1,"sortText":"4013c359light1","filterText":"light1","insertText":"light1","insertTextFormat":1,"textEdit":{"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}},"newText":"light1"}}]}}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":21},"end":{"line":56,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":111,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"29","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"29","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5649

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":58},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light1, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"30","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"30","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":1164,"maxSize":30720},{"name":"data","size":22,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703748429","extra.time.utc=1703744829","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"31","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"31","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"32","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"32","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 229

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":8,"character":16}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":112,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":113,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":113,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":8,"character":15},"end":{"line":8,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":114,"result":[]}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":8,"character":15}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":115,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":8,"character":15}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":116,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":117,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":8,"character":15}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":117,"result":null}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":59},"contentChanges":[{"range":{"start":{"line":8,"character":15},"end":{"line":8,"character":16}},"rangeLength":1,"text":"8"}]}}Content-Length: 189

{"jsonrpc":"2.0","id":118,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":118,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":119,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":118}}Content-Length: 290

{"jsonrpc":"2.0","id":120,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":8,"character":16},"end":{"line":8,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":120,"result":[]}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":121,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":9,"character":16}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":121,"result":null}
<<<
Content-Length: 229

{"jsonrpc":"2.0","id":122,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":9,"character":16}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":122,"result":[]}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":123,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":9,"character":16},"end":{"line":9,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":123,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"33","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"33","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5649

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":59},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light1, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}Content-Length: 290

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":9,"character":15},"end":{"line":9,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":124,"result":[]}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":125,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":9,"character":14}}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":125,"result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"start":{"line":9,"character":8},"end":{"line":9,"character":14}}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":60},"contentChanges":[{"range":{"start":{"line":9,"character":15},"end":{"line":9,"character":16}},"rangeLength":1,"text":"7"}]}}Content-Length: 189

{"jsonrpc":"2.0","id":126,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":126,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":127,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":126}}Content-Length: 290

{"jsonrpc":"2.0","id":128,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":9,"character":16},"end":{"line":9,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":128,"result":[]}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":129,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":10,"character":17}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":129,"result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":17}}}}Content-Length: 119

{"jsonrpc":"2.0","id":"34","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"34","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5649

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":60},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light1, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}Content-Length: 218

{"jsonrpc":"2.0","id":130,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":10,"character":16}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":130,"result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":17}}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":131,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":11,"character":15}}}
>>>
Content-Length: 217

{"jsonrpc":"2.0","id":131,"result":{"contents":{"kind":"markdown","value":"### macro `button1`  \n\n---\n```cpp\n#define button1 10\n```"},"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":15}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":132,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":12,"character":17}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":132,"result":null}Content-Length: 119

{"jsonrpc":"2.0","id":"35","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"35","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"36","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"36","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":1164,"maxSize":30720},{"name":"data","size":22,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703748453","extra.time.utc=1703744853","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"37","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"37","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":133,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":12,"character":2}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":133,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":134,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":13,"character":2}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":134,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":135,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":11,"character":7}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":135,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":136,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":10,"character":7}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":136,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":137,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":10,"character":8}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":137,"result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":17}}}}
<<<
Content-Length: 229

{"jsonrpc":"2.0","id":138,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":10,"character":8}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":138,"result":[]}
<<<
Content-Length: 230

{"jsonrpc":"2.0","id":139,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":10,"character":16}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":139,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":140,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":16}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":140,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":141,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":141,"result":[]}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":142,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":10,"character":16}}}
>>>
Content-Length: 220

{"jsonrpc":"2.0","id":142,"result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":17}}}}
<<<
Content-Length: 223

{"jsonrpc":"2.0","id":143,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":10,"character":17}}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":143,"result":[{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","range":{"start":{"line":10,"character":8},"end":{"line":10,"character":17}}}]}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":144,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":17}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":144,"result":{"contents":{"kind":"markdown","value":"### macro `light1`  \n\n---\n```cpp\n#define light1 8\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":145,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":15}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":145,"result":{"contents":{"kind":"markdown","value":"### macro `light1`  \n\n---\n```cpp\n#define light1 8\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}}}}
<<<
Content-Length: 230

{"jsonrpc":"2.0","id":146,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":15}}}
>>>
Content-Length: 395

{"jsonrpc":"2.0","id":146,"result":[{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":14}},"kind":1},{"range":{"start":{"line":153,"character":4},"end":{"line":153,"character":16}},"kind":1},{"range":{"start":{"line":160,"character":4},"end":{"line":160,"character":16}},"kind":1},{"range":{"start":{"line":166,"character":4},"end":{"line":166,"character":16}},"kind":1}]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":147,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":147,"result":[]}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":148,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":21}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":148,"result":{"contents":{"kind":"markdown","value":"### macro `light1`  \n\n---\n```cpp\n#define light1 8\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":149,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":20}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":149,"result":{"contents":{"kind":"markdown","value":"### macro `light1`  \n\n---\n```cpp\n#define light1 8\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}}}}
<<<
Content-Length: 223

{"jsonrpc":"2.0","id":150,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":21}}}
>>>
Content-Length: 210

{"jsonrpc":"2.0","id":150,"result":[{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","range":{"start":{"line":8,"character":8},"end":{"line":8,"character":14}}}]}
<<<
Content-Length: 322

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":61},"contentChanges":[{"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":21}},"rangeLength":6,"text":"lightAuto"}]}}Content-Length: 189

{"jsonrpc":"2.0","id":151,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":152,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"38","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3912

{"jsonrpc":"2.0","id":151,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":152,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":151}}Content-Length: 41

{"jsonrpc":"2.0","id":"38","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":24},"end":{"line":56,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":153,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"39","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"39","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5652

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":61},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(lightAuto, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"40","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"40","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":154,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":19}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":154,"result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":24}}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":155,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":55,"character":8}}}
>>>
Content-Length: 230

{"jsonrpc":"2.0","id":155,"result":{"contents":{"kind":"markdown","value":"### function `loop`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid loop()\n```"},"range":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":156,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":5}}}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":156,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":14}}}}
<<<
Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":1164,"maxSize":30720},{"name":"data","size":22,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703748505","extra.time.utc=1703744905","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"41","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"41","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"42","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"42","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":157,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":55,"character":2}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":157,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":158,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":55,"character":3}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":158,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":159,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":9}}}
>>>
Content-Length: 320

{"jsonrpc":"2.0","id":159,"result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":14}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":160,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":58,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":160,"result":null}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":161,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":58,"character":11}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":161,"result":null}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":162,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":57,"character":13}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":162,"result":null}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":163,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":57,"character":14}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":163,"result":null}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":164,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":32},"end":{"line":56,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":164,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":56,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":165,"result":[]}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":166,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":1}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":166,"result":null}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":62},"contentChanges":[{"range":{"start":{"line":56,"character":1},"end":{"line":56,"character":32}},"rangeLength":31,"text":""}]}}Content-Length: 189

{"jsonrpc":"2.0","id":167,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":168,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":167,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":168,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":167}}Content-Length: 311

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":63},"contentChanges":[{"range":{"start":{"line":56,"character":0},"end":{"line":56,"character":1}},"rangeLength":1,"text":""}]}}Content-Length: 189

{"jsonrpc":"2.0","id":169,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":169}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":169,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":170,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":64},"contentChanges":[{"range":{"start":{"line":55,"character":13},"end":{"line":56,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 189

{"jsonrpc":"2.0","id":171,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":172,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":171,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":172,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":171}}Content-Length: 292

{"jsonrpc":"2.0","id":173,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":55,"character":13},"end":{"line":55,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":173,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"43","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"43","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5618

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":64},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"44","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"44","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":174,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":13,"character":2}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":174,"result":null}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":175,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":11,"character":15}}}
>>>
Content-Length: 217

{"jsonrpc":"2.0","id":175,"result":{"contents":{"kind":"markdown","value":"### macro `button1`  \n\n---\n```cpp\n#define button1 10\n```"},"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":15}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":176,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":11,"character":17}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":176,"result":null}
<<<
Content-Length: 230

{"jsonrpc":"2.0","id":177,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":11,"character":18}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":177,"result":[]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":178,"result":[]}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":65},"contentChanges":[{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 189

{"jsonrpc":"2.0","id":179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":180,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"45","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3912

{"jsonrpc":"2.0","id":179,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":180,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":179}}Content-Length: 41

{"jsonrpc":"2.0","id":"45","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":181,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"46","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"46","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5617

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":65},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 1\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":66},"contentChanges":[{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"rangeLength":0,"text":"2"}]}}Content-Length: 189

{"jsonrpc":"2.0","id":182,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":182}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":182,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":183,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":184,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":184,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 5618

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":66},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"47","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"47","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":185,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":11,"character":17}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":185,"result":null}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":186,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":13,"character":21}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":186,"result":null}
<<<
Content-Length: 230

{"jsonrpc":"2.0","id":187,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":13,"character":21}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":187,"result":[]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":188,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":13,"character":21},"end":{"line":13,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":188,"result":[]}
<<<
Content-Length: 313

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":67},"contentChanges":[{"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":21}},"rangeLength":1,"text":""}]}}Content-Length: 189

{"jsonrpc":"2.0","id":189,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":190,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"48","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3912

{"jsonrpc":"2.0","id":189,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":190,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":189}}Content-Length: 41

{"jsonrpc":"2.0","id":"48","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":191,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":191,"result":[]}
<<<
Content-Length: 314

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":68},"contentChanges":[{"range":{"start":{"line":13,"character":20},"end":{"line":13,"character":20}},"rangeLength":0,"text":"0"}]}}Content-Length: 189

{"jsonrpc":"2.0","id":192,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":193,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":192}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":192,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":193,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":13,"character":21},"end":{"line":13,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":194,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"49","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"49","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5618

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":68},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW && pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"50","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"50","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":195,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":1}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":195,"result":null}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":195}}Content-Length: 217

{"jsonrpc":"2.0","id":196,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":0}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":196,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":197,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":57,"character":0}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":197,"result":null}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":198,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":56,"character":1}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":198,"result":null}
<<<
Content-Length: 290

{"jsonrpc":"2.0","id":199,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":62,"character":7}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":199,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":146,"character":6}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":200,"result":[]}
<<<
Content-Length: 8827

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":69},"contentChanges":[{"range":{"start":{"line":146,"character":2},"end":{"line":146,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":145,"character":2},"end":{"line":145,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":144,"character":2},"end":{"line":144,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":143,"character":2},"end":{"line":143,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":142,"character":2},"end":{"line":142,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":141,"character":2},"end":{"line":141,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":140,"character":2},"end":{"line":140,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":139,"character":2},"end":{"line":139,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":138,"character":2},"end":{"line":138,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":137,"character":2},"end":{"line":137,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":136,"character":2},"end":{"line":136,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":135,"character":2},"end":{"line":135,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":134,"character":2},"end":{"line":134,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":133,"character":2},"end":{"line":133,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":132,"character":2},"end":{"line":132,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":131,"character":2},"end":{"line":131,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":130,"character":2},"end":{"line":130,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":129,"character":2},"end":{"line":129,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":128,"character":2},"end":{"line":128,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":127,"character":2},"end":{"line":127,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":126,"character":2},"end":{"line":126,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":125,"character":2},"end":{"line":125,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":124,"character":2},"end":{"line":124,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":123,"character":2},"end":{"line":123,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":122,"character":2},"end":{"line":122,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":121,"character":2},"end":{"line":121,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":120,"character":2},"end":{"line":120,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":119,"character":2},"end":{"line":119,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":118,"character":2},"end":{"line":118,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":117,"character":2},"end":{"line":117,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":116,"character":2},"end":{"line":116,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":115,"character":2},"end":{"line":115,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":114,"character":2},"end":{"line":114,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":113,"character":2},"end":{"line":113,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":112,"character":2},"end":{"line":112,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":111,"character":2},"end":{"line":111,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":109,"character":2},"end":{"line":109,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":107,"character":2},"end":{"line":107,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":106,"character":2},"end":{"line":106,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":104,"character":2},"end":{"line":104,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":103,"character":2},"end":{"line":103,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":101,"character":2},"end":{"line":101,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":100,"character":2},"end":{"line":100,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":99,"character":2},"end":{"line":99,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":98,"character":2},"end":{"line":98,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":95,"character":2},"end":{"line":95,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":93,"character":2},"end":{"line":93,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":92,"character":2},"end":{"line":92,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":91,"character":2},"end":{"line":91,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":90,"character":2},"end":{"line":90,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":88,"character":2},"end":{"line":88,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":84,"character":2},"end":{"line":84,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":82,"character":2},"end":{"line":82,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":81,"character":2},"end":{"line":81,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":80,"character":2},"end":{"line":80,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":79,"character":2},"end":{"line":79,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":78,"character":2},"end":{"line":78,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":77,"character":2},"end":{"line":77,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":76,"character":2},"end":{"line":76,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":73,"character":2},"end":{"line":73,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":72,"character":2},"end":{"line":72,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":71,"character":2},"end":{"line":71,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":70,"character":2},"end":{"line":70,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":69,"character":2},"end":{"line":69,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":68,"character":2},"end":{"line":68,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":67,"character":2},"end":{"line":67,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":66,"character":2},"end":{"line":66,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":65,"character":2},"end":{"line":65,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":63,"character":2},"end":{"line":63,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":62,"character":2},"end":{"line":62,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":61,"character":2},"end":{"line":61,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":57,"character":2},"end":{"line":57,"character":5}},"rangeLength":3,"text":""},{"range":{"start":{"line":56,"character":2},"end":{"line":56,"character":5}},"rangeLength":3,"text":""}]}}Content-Length: 189

{"jsonrpc":"2.0","id":201,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":202,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":201}}Content-Length: 291

{"jsonrpc":"2.0","id":203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":56,"character":1},"end":{"line":146,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"51","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3912

{"jsonrpc":"2.0","id":201,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":202,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":53,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":171,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":203,"result":[]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"51","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"52","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"52","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5372

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":69},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW && pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":204,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":146,"character":3},"end":{"line":146,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":204,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"53","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"53","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":205,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":149,"character":23}}}
>>>
Content-Length: 226

{"jsonrpc":"2.0","id":205,"result":{"contents":{"kind":"markdown","value":"### macro `buttonAuto`  \n\n---\n```cpp\n#define buttonAuto 10\n```"},"range":{"start":{"line":149,"character":19},"end":{"line":149,"character":29}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":206,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":146,"character":3}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":206,"result":null}
<<<
Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":2328,"maxSize":30720},{"name":"data","size":31,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703748866","extra.time.utc=1703745266","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"54","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"54","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"55","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"55","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":207,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":145,"character":0}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":207,"result":null}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":207}}Content-Length: 218

{"jsonrpc":"2.0","id":208,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":145,"character":0}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":208,"result":null}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":209,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":111,"character":0}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":209,"result":null}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":210,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":108,"character":0}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":210,"result":null}
<<<
Content-Length: 231

{"jsonrpc":"2.0","id":211,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":112,"character":43}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":211,"result":[]}
<<<
Content-Length: 294

{"jsonrpc":"2.0","id":212,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":112,"character":43},"end":{"line":112,"character":43}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":212,"result":[]}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":213,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":152,"character":23}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":213,"result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"start":{"line":152,"character":17},"end":{"line":152,"character":26}}}}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":214,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":151,"character":42}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":214,"result":null}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":215,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":151,"character":56}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":215,"result":null}
<<<
Content-Length: 231

{"jsonrpc":"2.0","id":216,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":151,"character":57}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":216,"result":[]}
<<<
Content-Length: 293

{"jsonrpc":"2.0","id":217,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":151,"character":0},"end":{"line":151,"character":57}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":217,"result":[]}
<<<
Content-Length: 293

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":150,"character":0},"end":{"line":151,"character":57}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":218,"result":[]}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":219,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":151,"character":14}}}
>>>
Content-Length: 434

{"jsonrpc":"2.0","id":219,"result":{"contents":{"kind":"markdown","value":"### instance-method `put`  \n\n---\n→ `const pump_mode \u0026`  \nParameters:  \n- `int idx`\n- `const pump_mode \u0026 t`\n\n---\n```cpp\n// In EEPROMClass\npublic: template \u003c\u003e const pump_mode \u0026put\u003cpump_mode\u003e(int idx, const pump_mode \u0026t)\n```"},"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":14}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":220,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":151,"character":7}}}
>>>
Content-Length: 265

{"jsonrpc":"2.0","id":220,"result":{"contents":{"kind":"markdown","value":"### variable `EEPROM`  \n\n---\nType: `struct EEPROMClass`  \n\n---\n```cpp\nstatic EEPROMClass EEPROM\n```"},"range":{"start":{"line":151,"character":4},"end":{"line":151,"character":10}}}}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":220}}Content-Length: 218

{"jsonrpc":"2.0","id":221,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":151,"character":8}}}
>>>
Content-Length: 265

{"jsonrpc":"2.0","id":221,"result":{"contents":{"kind":"markdown","value":"### variable `EEPROM`  \n\n---\nType: `struct EEPROMClass`  \n\n---\n```cpp\nstatic EEPROMClass EEPROM\n```"},"range":{"start":{"line":151,"character":4},"end":{"line":151,"character":10}}}}
<<<
Content-Length: 219

{"jsonrpc":"2.0","id":222,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":151,"character":15}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":222,"result":null}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":223,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":49,"character":19},"end":{"line":49,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":223,"result":[]}
<<<
Content-Length: 317

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":70},"contentChanges":[{"range":{"start":{"line":49,"character":19},"end":{"line":49,"character":19}},"rangeLength":0,"text":"\n  "}]}}Content-Length: 189

{"jsonrpc":"2.0","id":224,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":225,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 4343

{"jsonrpc":"2.0","id":224,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":11}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":148,"character":23}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}Content-Length: 4343

{"jsonrpc":"2.0","id":225,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":11}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":148,"character":23}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":21}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":54,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":56,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":56,"character":5},"end":{"line":56,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":172,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":21}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":224}}Content-Length: 391

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":71},"contentChanges":[{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":2}},"rangeLength":0,"text":"    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM"}]}}Content-Length: 189

{"jsonrpc":"2.0","id":226,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":227,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":226}}
>>>
Content-Length: 3911

{"jsonrpc":"2.0","id":226,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":11}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":149,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":173,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":21}}}]}Content-Length: 3911

{"jsonrpc":"2.0","id":227,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":11}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":9}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":149,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":173,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":21}}}]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":228,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":51,"character":57},"end":{"line":51,"character":57}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":228,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"56","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"56","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5456

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":71},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n      mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW && pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"57","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"57","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":229,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":48,"character":19},"end":{"line":48,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":229,"result":[]}
<<<
Content-Length: 415

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":72},"contentChanges":[{"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":2}},"rangeLength":2,"text":""},{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":6}},"rangeLength":4,"text":""}]}}Content-Length: 189

{"jsonrpc":"2.0","id":230,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":"58","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3912

{"jsonrpc":"2.0","id":230,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":55,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":149,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":173,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":21}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"58","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"59","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"59","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5450

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":72},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  mode = AUTOMATIC;\n  EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW && pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"60","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"60","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":231,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":42,"character":7}}}
>>>
Content-Length: 311

{"jsonrpc":"2.0","id":231,"result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"start":{"line":42,"character":2},"end":{"line":42,"character":9}}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":2340,"maxSize":30720},{"name":"data","size":31,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703750121","extra.time.utc=1703746521","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"61","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"61","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"62","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"62","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":232,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":34}}}
>>>
Content-Length: 259

{"jsonrpc":"2.0","id":232,"result":{"contents":{"kind":"markdown","value":"### variable `mode`  \n\n---\nType: `enum pump_mode`  \n\n---\n```cpp\nstatic enum pump_mode mode\n```"},"range":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}}}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":232}}Content-Length: 218

{"jsonrpc":"2.0","id":233,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":28,"character":29}}}
>>>
Content-Length: 454

{"jsonrpc":"2.0","id":233,"result":{"contents":{"kind":"markdown","value":"### enum `pump_mode`  \n\n---\n#define pump1 31  \n#define pump2 27  \n#define floatSwitch1 36  \n#define floatSwitch2 38  \n#define light1 29  \n#define light2 25  \n#define lightAuto 23  \n#define button1 42  \n#define button2 44  \n#define buttonAuto 46  \n\n---\n```cpp\nenum pump_mode {}\n```"},"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":234,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":28,"character":28}}}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":234,"result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP1`  \n\n---\nType: `enum pump_mode`  \nValue = `1`  \n\n---\n```cpp\n// In pump_mode\nPUMP1\n```"},"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":235,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":28}}}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":235,"result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":236,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":28,"character":29}}}
>>>
Content-Length: 454

{"jsonrpc":"2.0","id":236,"result":{"contents":{"kind":"markdown","value":"### enum `pump_mode`  \n\n---\n#define pump1 31  \n#define pump2 27  \n#define floatSwitch1 36  \n#define floatSwitch2 38  \n#define light1 29  \n#define light2 25  \n#define lightAuto 23  \n#define button1 42  \n#define button2 44  \n#define buttonAuto 46  \n\n---\n```cpp\nenum pump_mode {}\n```"},"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":237,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":27}}}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":237,"result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":238,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":28}}}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":238,"result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":238}}Content-Length: 218

{"jsonrpc":"2.0","id":239,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":29}}}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":239,"result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}}
<<<
Content-Length: 230

{"jsonrpc":"2.0","id":240,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":29}}}
>>>
Content-Length: 308

{"jsonrpc":"2.0","id":240,"result":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"kind":1},{"range":{"start":{"line":136,"character":23},"end":{"line":136,"character":28}},"kind":1},{"range":{"start":{"line":165,"character":11},"end":{"line":165,"character":16}},"kind":1}]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":241,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":29,"character":29},"end":{"line":29,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":241,"result":[]}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":242,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":242,"result":[]}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":243,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":24}}}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":243,"result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":244,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":24}}}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":244,"result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}}
<<<
Content-Length: 223

{"jsonrpc":"2.0","id":245,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":25}}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":245,"result":[{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":246,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":29,"character":25}}}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":246,"result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":247,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":28,"character":30},"end":{"line":28,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":247,"result":[]}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":248,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":50,"character":14}}}
>>>
Content-Length: 280

{"jsonrpc":"2.0","id":248,"result":{"contents":{"kind":"markdown","value":"### enumerator `AUTOMATIC`  \n\n---\nType: `enum pump_mode`  \nValue = `0`  \n\n---\n```cpp\n// In pump_mode\nAUTOMATIC\n```"},"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":18}}}}
<<<
Content-Length: 217

{"jsonrpc":"2.0","id":249,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":50,"character":9}}}
>>>
Content-Length: 280

{"jsonrpc":"2.0","id":249,"result":{"contents":{"kind":"markdown","value":"### enumerator `AUTOMATIC`  \n\n---\nType: `enum pump_mode`  \nValue = `0`  \n\n---\n```cpp\n// In pump_mode\nAUTOMATIC\n```"},"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":18}}}}
<<<
Content-Length: 229

{"jsonrpc":"2.0","id":250,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":50,"character":9}}}
>>>
Content-Length: 394

{"jsonrpc":"2.0","id":250,"result":[{"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"kind":1},{"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":18}},"kind":1},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":25}},"kind":1},{"range":{"start":{"line":152,"character":11},"end":{"line":152,"character":20}},"kind":1}]}
<<<
Content-Length: 230

{"jsonrpc":"2.0","id":251,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":50,"character":18}}}
>>>
Content-Length: 394

{"jsonrpc":"2.0","id":251,"result":[{"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"kind":1},{"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":18}},"kind":1},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":25}},"kind":1},{"range":{"start":{"line":152,"character":11},"end":{"line":152,"character":20}},"kind":1}]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":252,"result":[]}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":253,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":51,"character":20}}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":253,"result":{"contents":{"kind":"markdown","value":"### `expression`  \n\n---\nType: `unsigned int`  \nValue = `2`"},"range":{"start":{"line":51,"character":17},"end":{"line":51,"character":23}}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":254,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":51,"character":19}}}
>>>
Content-Length: 219

{"jsonrpc":"2.0","id":254,"result":{"contents":{"kind":"markdown","value":"### `expression`  \n\n---\nType: `unsigned int`  \nValue = `2`"},"range":{"start":{"line":51,"character":17},"end":{"line":51,"character":23}}}}
<<<
Content-Length: 223

{"jsonrpc":"2.0","id":255,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":51,"character":20}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":255,"result":[]}
<<<
Content-Length: 317

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":73},"contentChanges":[{"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":18}},"rangeLength":9,"text":"PUMP2"}]}}Content-Length: 189

{"jsonrpc":"2.0","id":256,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":257,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":256,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":55,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":149,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":173,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":257,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":55,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":149,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":173,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":21}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":256}}Content-Length: 292

{"jsonrpc":"2.0","id":258,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":50,"character":14},"end":{"line":50,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":258,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"63","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"63","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5446

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":73},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  mode = PUMP2;\n  EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW && pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"64","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"64","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":2344,"maxSize":30720},{"name":"data","size":31,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703750159","extra.time.utc=1703746559","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"65","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"65","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"66","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"66","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 230

{"jsonrpc":"2.0","id":259,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":51,"character":55}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":259,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":260,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":50,"character":0},"end":{"line":51,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":260,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":261,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":261,"result":[]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":262,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":50,"character":0},"end":{"line":51,"character":55}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":262,"result":[]}
<<<
Content-Length: 421

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":74},"contentChanges":[{"range":{"start":{"line":51,"character":2},"end":{"line":51,"character":2}},"rangeLength":0,"text":"// "},{"range":{"start":{"line":50,"character":2},"end":{"line":50,"character":2}},"rangeLength":0,"text":"// "}]}}Content-Length: 189

{"jsonrpc":"2.0","id":263,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 189

{"jsonrpc":"2.0","id":264,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":263}}
>>>
Content-Length: 3912

{"jsonrpc":"2.0","id":263,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":55,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":149,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":173,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":21}}}]}Content-Length: 3912

{"jsonrpc":"2.0","id":264,"result":[{"name":"pumpChrono","detail":"Chrono","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":34}},"selectionRange":{"start":{"line":2,"character":7},"end":{"line":2,"character":17}}},{"name":"pump_mode","detail":"enum","kind":10,"range":{"start":{"line":27,"character":7},"end":{"line":29,"character":31}},"selectionRange":{"start":{"line":27,"character":12},"end":{"line":27,"character":21}},"children":[{"name":"AUTOMATIC","detail":"pump_mode","kind":22,"range":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}},"selectionRange":{"start":{"line":27,"character":24},"end":{"line":27,"character":33}}},{"name":"PUMP1","detail":"pump_mode","kind":22,"range":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}},"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":29}}},{"name":"PUMP2","detail":"pump_mode","kind":22,"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}},"selectionRange":{"start":{"line":29,"character":24},"end":{"line":29,"character":29}}}]},{"name":"mode","detail":"enum pump_mode","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":29,"character":36}},"selectionRange":{"start":{"line":29,"character":32},"end":{"line":29,"character":36}}},{"name":"pump_state","detail":"enum","kind":10,"range":{"start":{"line":30,"character":7},"end":{"line":31,"character":31}},"selectionRange":{"start":{"line":30,"character":12},"end":{"line":30,"character":22}},"children":[{"name":"UNLOCK","detail":"pump_state","kind":22,"range":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}},"selectionRange":{"start":{"line":30,"character":25},"end":{"line":30,"character":31}}},{"name":"LOCK","detail":"pump_state","kind":22,"range":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":25},"end":{"line":31,"character":29}}}]},{"name":"lockState","detail":"enum pump_state","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":31,"character":41}},"selectionRange":{"start":{"line":31,"character":32},"end":{"line":31,"character":41}}},{"name":"pump1state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":15}},"selectionRange":{"start":{"line":32,"character":5},"end":{"line":32,"character":15}}},{"name":"pump2state","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":27}},"selectionRange":{"start":{"line":32,"character":17},"end":{"line":32,"character":27}}},{"name":"previousState","detail":"bool","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":48}},"selectionRange":{"start":{"line":32,"character":29},"end":{"line":32,"character":42}}},{"name":"timeCount","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":34}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":23}}},{"name":"debounce","detail":"uint8_t","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":21}},"selectionRange":{"start":{"line":34,"character":8},"end":{"line":34,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":55,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":57,"character":0},"end":{"line":149,"character":1}},"selectionRange":{"start":{"line":57,"character":5},"end":{"line":57,"character":9}}},{"name":"checkButtonPress","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":173,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":21}}}]}
<<<
Content-Length: 291

{"jsonrpc":"2.0","id":265,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":50,"character":0},"end":{"line":51,"character":58}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":265,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"67","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"67","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 5452

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino","version":74},"text":"#include <EEPROM.h>\n#include <Chrono.h>\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  // mode = PUMP2;\n  // EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW && digitalRead(floatSwitch2) == LOW && lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) && lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW && pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH && pump2state == LOW && pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH && pump1state == LOW && pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) && previousState == HIGH && millis() - timeCount > debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 218

{"jsonrpc":"2.0","id":266,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"position":{"line":42,"character":11}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":266,"result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":19}}}}Content-Length: 119

{"jsonrpc":"2.0","id":"68","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"68","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 26636

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"executableSectionsSize":[{"name":"text","size":2328,"maxSize":30720},{"name":"data","size":31,"maxSize":2048}],"usedLibraries":[{"name":"EEPROM","author":"Arduino, Christopher Andrews","maintainer":"Arduino <info@arduino.cc>","sentence":"Enables reading and writing to the permanent board storage.","paragraph":"This library allows to read and write data in a memory type, the EEPROM, that keeps its content also when the board is powered off. The amount of EEPROM available depends on the microcontroller type.","website":"http://www.arduino.cc/en/Reference/EEPROM","category":"Data Storage","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM","sourceDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\src","utilityDir":"","containerPlatform":"arduino:avr@1.8.6","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["avr"],"types":[],"examples":["C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_clear","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_crc","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_get","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_iteration","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_put","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_read","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_update","C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\libraries\\EEPROM\\examples\\eeprom_write"],"providesIncludes":["EEPROM.h"],"properties":{},"compatibleWith":{}},{"name":"Chrono","author":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","maintainer":"Thomas O Fredericks <tof@t-o-f.info> and Sofian Audry","sentence":"Chronometer/stopwatch library that counts the time passed since started.","paragraph":"Works with Arduino and Wiring.","website":"https://github.com/SofaPirate/Chrono","category":"Timing","installDir":"C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","sourceDir":"c:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"1.2.0","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\Resolutions","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\StopResume","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetro","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\basicMetroSerial","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\blinking_2_instances","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\debouncingExample","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\msBetweenButtonPresses","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomServoAngle","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\randomTones","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\serialInterval","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\servo_control_analog_input","C:\\Users\\DEXTER\\Documents\\Arduino\\libraries\\Chrono\\examples\\toneSweep"],"providesIncludes":["Chrono.h","LightChrono.h"],"properties":{},"compatibleWith":{}}],"buildProperties":["_id=nano","archive_file_path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}","bootloader.extended_fuses=0xFD","bootloader.file=optiboot/optiboot_atmega328.hex","bootloader.high_fuses=0xDA","bootloader.lock_bits=0x0F","bootloader.low_fuses=0xFF","bootloader.tool=avrdude","bootloader.tool.default=avrdude","bootloader.unlock_bits=0x3F","build.arch=AVR","build.board=AVR_NANO","build.core=arduino","build.core.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\cores\\arduino","build.extra_flags=","build.f_cpu=16000000L","build.fqbn=arduino:avr:nano:cpu=atmega328","build.library_discovery_phase=0","build.mcu=atmega328p","build.path=C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","build.project_name=ELENKTIS_MEMFYS.ino","build.source.path=C:\\Users\\DEXTER\\Downloads\\ELENKTIS_MEMFYS\\ELENKTIS_MEMFYS","build.system.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\system","build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER=\"Unknown\"' '-DUSB_PRODUCT={build.usb_product}'","build.usb_manufacturer=\"Unknown\"","build.variant=eightanaloginputs","build.variant.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6\\variants\\eightanaloginputs","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD","compiler.ar.cmd=avr-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=rcs","compiler.c.cmd=avr-gcc","compiler.c.elf.cmd=avr-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections","compiler.c.extra_flags=","compiler.c.flags=-c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects","compiler.cpp.cmd=avr-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto","compiler.elf2hex.cmd=avr-objcopy","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=-O ihex -R .eeprom","compiler.ldflags=","compiler.libraries.ldflags=","compiler.objcopy.cmd=avr-objcopy","compiler.objcopy.eep.extra_flags=","compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0","compiler.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/","compiler.size.cmd=avr-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1703750178","extra.time.utc=1703746578","extra.time.zone=3600","ide_version=10607","menu.cpu.atmega168=ATmega168","menu.cpu.atmega168.bootloader.extended_fuses=0xF8","menu.cpu.atmega168.bootloader.file=atmega/ATmegaBOOT_168_diecimila.hex","menu.cpu.atmega168.bootloader.high_fuses=0xdd","menu.cpu.atmega168.bootloader.low_fuses=0xff","menu.cpu.atmega168.build.mcu=atmega168","menu.cpu.atmega168.upload.maximum_data_size=1024","menu.cpu.atmega168.upload.maximum_size=14336","menu.cpu.atmega168.upload.speed=19200","menu.cpu.atmega328=ATmega328P","menu.cpu.atmega328.bootloader.extended_fuses=0xFD","menu.cpu.atmega328.bootloader.file=optiboot/optiboot_atmega328.hex","menu.cpu.atmega328.bootloader.high_fuses=0xDA","menu.cpu.atmega328.bootloader.low_fuses=0xFF","menu.cpu.atmega328.build.mcu=atmega328p","menu.cpu.atmega328.upload.maximum_data_size=2048","menu.cpu.atmega328.upload.maximum_size=30720","menu.cpu.atmega328.upload.speed=115200","menu.cpu.atmega328old=ATmega328P (Old Bootloader)","menu.cpu.atmega328old.bootloader.extended_fuses=0xFD","menu.cpu.atmega328old.bootloader.file=atmega/ATmegaBOOT_168_atmega328.hex","menu.cpu.atmega328old.bootloader.high_fuses=0xDA","menu.cpu.atmega328old.bootloader.low_fuses=0xFF","menu.cpu.atmega328old.build.mcu=atmega328p","menu.cpu.atmega328old.upload.maximum_data_size=2048","menu.cpu.atmega328old.upload.maximum_size=30720","menu.cpu.atmega328old.upload.speed=57600","name=Arduino Nano","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","preproc.includes.flags=-w -x c++ -M -MG -MP","preproc.macros.flags=-w -x c++ -E -CC","recipe.S.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -x assembler-with-cpp -flto -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc-ar\" rcs  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -w -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections -mmcu=atmega328p   -o \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" {object_files}  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/{archive_file}\" \"-LC:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE\" -lm","recipe.c.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-gcc\" -c -g -Os -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{object_file}\"","recipe.objcopy.eep.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.eep\"","recipe.objcopy.hex.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-objcopy\" -O ihex -R .eeprom  \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\" \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\"","recipe.output.save_file=ELENKTIS_MEMFYS.ino.eightanaloginputs.hex","recipe.output.tmp_file=ELENKTIS_MEMFYS.ino.hex","recipe.preproc.includes=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -M -MG -MP -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\"","recipe.preproc.macros=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-g++\" -c -g -Os -w -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -Wno-error=narrowing -MMD -flto -w -x c++ -E -CC -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO=10607 -DARDUINO_AVR_NANO -DARDUINO_ARCH_AVR   {includes} \"{source_file}\" -o \"{preprocessed_file_path}\"","recipe.size.pattern=\"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7/bin/avr-size\" -A \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.elf\"","recipe.size.regex=^(?:\\.text|\\.data|\\.bootloader)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.bss|\\.noinit)\\s+([0-9]+).*","recipe.size.regex.eeprom=^(?:\\.eeprom)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr","runtime.ide.path=C:\\Users\\DEXTER\\AppData\\Local\\Programs\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","runtime.tools.CMSIS-5.9.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.CMSIS.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\CMSIS\\5.9.0","runtime.tools.STM32Tools-2.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM32Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM32Tools\\2.2.1","runtime.tools.STM8Tools-1.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.STM8Tools.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\STM8Tools\\1.0.0","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.cxppstm8-4.1.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.cxppstm8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\cxppstm8\\4.1.3","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esptool_py-3.0.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\3.0.0","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.mdns-discovery-1.0.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.2","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.openocd-esp32-v0.11.0-esp32-20221026.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.openocd-esp32.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.11.0-esp32-20221026","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.riscv32-esp-elf-gcc-gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gcc\\gcc8_4_0-crosstool-ng-1.24.0-123-g64eb9ff","runtime.tools.riscv32-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\11.2_20220823","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.1","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.xpack-arm-none-eabi-gcc-12.2.1-1.2.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-arm-none-eabi-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-arm-none-eabi-gcc\\12.2.1-1.2","runtime.tools.xpack-openocd-0.12.0-1.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xpack-openocd.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\STMicroelectronics\\tools\\xpack-openocd\\0.12.0-1","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s2-elf-gcc-gcc8_4_0-esp-2020r3.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s2-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s2-elf-gcc\\gcc8_4_0-esp-2020r3","runtime.tools.xtensa-esp32s3-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32s3-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32s3-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","software=ARDUINO","tools.arduino_ota.cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.arduino_ota.upload.pattern=\"{cmd}\" -address {upload.port.address} -port {upload.port.properties.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.port.properties.endpoint_upload} -sync {upload.port.properties.endpoint_sync} -reset {upload.port.properties.endpoint_reset} -sync_exp {upload.port.properties.sync_return}","tools.avrdude.bootloader.params.quiet=-q -q","tools.avrdude.bootloader.params.verbose=-v","tools.avrdude.bootloader.pattern=\"{cmd.path}\" \"-C{config.path}\" {bootloader.verbose} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6/bootloaders/optiboot/optiboot_atmega328.hex:i\" -Ulock:w:0x0F:m","tools.avrdude.cmd.path={path}/bin/avrdude","tools.avrdude.config.path={path}/etc/avrdude.conf","tools.avrdude.erase.params.quiet=-q -q","tools.avrdude.erase.params.verbose=-v","tools.avrdude.erase.pattern=\"{cmd.path}\" \"-C{config.path}\" {erase.verbose} -patmega328p -c{protocol} {program.extra_params} -e -Ulock:w:0x3F:m -Uefuse:w:0xFD:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m","tools.avrdude.network_cmd=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0/bin/arduinoOTA","tools.avrdude.path=C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.avrdude.program.params.noverify=-V","tools.avrdude.program.params.quiet=-q -q","tools.avrdude.program.params.verbose=-v","tools.avrdude.program.pattern=\"{cmd.path}\" \"-C{config.path}\" {program.verbose} {program.verify} -patmega328p -c{protocol} {program.extra_params} \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.program.verify=","tools.avrdude.upload.network_pattern=\"{network_cmd}\" -address {serial.port} -port {upload.network.port} -sketch \"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex\" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}","tools.avrdude.upload.params.noverify=-V","tools.avrdude.upload.params.quiet=-q -q","tools.avrdude.upload.params.verbose=-v","tools.avrdude.upload.pattern=\"{cmd.path}\" \"-C{config.path}\" {upload.verbose} {upload.verify} -patmega328p -carduino \"-P{serial.port}\" -b115200 -D \"-Uflash:w:C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE/ELENKTIS_MEMFYS.ino.hex:i\"","tools.avrdude.upload.verify=","tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -patmega328p","upload.maximum_data_size=2048","upload.maximum_size=30720","upload.protocol=arduino","upload.speed=115200","upload.tool=avrdude","upload.tool.default=avrdude","upload.tool.network=arduino_ota","upload_port.0.board=nano","version=1.8.6"],"buildPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino\\sketches\\5C4B2BDDA5D0A64802875689C41195DE","buildOutputUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino/sketches/5C4B2BDDA5D0A64802875689C41195DE","buildPlatform":{"id":"arduino:avr","version":"1.8.6","installDir":"C:\\Users\\DEXTER\\AppData\\Local\\Arduino15\\packages\\arduino\\hardware\\avr\\1.8.6","packageUrl":""}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"69","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"69","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"70","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"70","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 292

{"jsonrpc":"2.0","id":267,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS.ino"},"range":{"start":{"line":49,"character":19},"end":{"line":49,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":267,"result":[]}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":268,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":268,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}