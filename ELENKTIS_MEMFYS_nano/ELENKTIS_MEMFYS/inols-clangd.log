






Started logging.

>>>
Content-Length: 3119

{"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":18256,"clientInfo":{"name":"vscode","version":"1.78.0"},"rootPath":"C:\\Users\\DEXTER\\AppData\\Local\\Temp\\arduino-language-server1659788359\\sketch","rootUri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"colorProvider":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/DEXTER/Downloads/ELENKTIS_MEMFYS/ELENKTIS_MEMFYS","name":"ELENKTIS_MEMFYS"}]}}
<<<
Content-Length: 1905

{"id":"1","jsonrpc":"2.0","result":{"capabilities":{"astProvider":true,"callHierarchyProvider":true,"clangdInlayHintsProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"compilationDatabase":{"automaticReload":true},"completionProvider":{"allCommitCharacters":[" ","\t","(",")","[","]","{","}","<",">",":",";",",","+","-","/","*","%","^","&","#","?",".","=","\"","'","|"],"resolveProvider":false,"triggerCharacters":[".","<",">",":","\"","/","*"]},"declarationProvider":true,"definitionProvider":true,"documentFormattingProvider":true,"documentHighlightProvider":true,"documentLinkProvider":{"resolveProvider":false},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n","moreTriggerCharacter":[]},"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"hoverProvider":true,"implementationProvider":true,"memoryUsageProvider":true,"referencesProvider":true,"renameProvider":{"prepareProvider":true},"selectionRangeProvider":true,"semanticTokensProvider":{"full":{"delta":true},"legend":{"tokenModifiers":["declaration","deprecated","deduced","readonly","static","abstract","virtual","dependentName","defaultLibrary","usedAsMutableReference","functionScope","classScope","fileScope","globalScope"],"tokenTypes":["variable","variable","parameter","function","method","function","property","variable","class","interface","enum","enumMember","type","type","unknown","namespace","typeParameter","concept","type","macro","comment"]},"range":false},"signatureHelpProvider":{"triggerCharacters":["(",")","{","}","<",">",","]},"textDocumentSync":{"change":2,"openClose":true,"save":true},"typeDefinitionProvider":true,"typeHierarchyProvider":true,"workspaceSymbolProvider":true},"serverInfo":{"name":"clangd","version":"clangd version 14.0.0 windows x86_64-pc-windows-msvc"}}}
>>>
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 6226

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","languageId":"cpp","version":1,"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 149 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}}}
<<<
Content-Length: 181

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/.clangd"}}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"2","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":15,"character":21},"end":{"line":15,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 181

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[],"uri":"file:///C:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/.clangd"}}Content-Length: 111

{"id":0,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":0,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/27","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 632

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":1}}Content-Length: 38

{"id":"2","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 211

{"jsonrpc":"2.0","id":"3","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4548

{"id":"3","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 251

{"jsonrpc":"2.0","id":"4","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":9,"character":22}}}
<<<
Content-Length: 38

{"id":"4","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 312

{"jsonrpc":"2.0","id":"5","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":22}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 38

{"id":"5","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6230

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":2},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 149 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 111

{"id":1,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":1,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":66,"character":2}}}
<<<
Content-Length: 255

{"id":"6","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `checkButtonPress`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid checkButtonPress()\n```"},"range":{"end":{"character":18,"line":66},"start":{"character":2,"line":66}}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":66,"character":1}}}
<<<
Content-Length: 40

{"id":"7","jsonrpc":"2.0","result":null}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":1}}}
<<<
Content-Length: 40

{"id":"8","jsonrpc":"2.0","result":null}
>>>
Content-Length: 313

{"jsonrpc":"2.0","id":"9","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":118,"character":6}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 401

{"id":"9","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":6,"line":118},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"10","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":119,"character":0}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 402

{"id":"10","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":0,"line":119},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"11","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":120,"character":6}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 402

{"id":"11","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":6,"line":120},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"12","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":120,"character":6}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 402

{"id":"12","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":6,"line":120},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"13","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":120,"character":7}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 402

{"id":"13","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":7,"line":120},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"14","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":120,"character":6}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 402

{"id":"14","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":6,"line":120},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"15","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":131,"character":4}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 402

{"id":"15","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":4,"line":131},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"16","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":132,"character":31}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 403

{"id":"16","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":31,"line":132},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"17","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":145,"character":4}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 402

{"id":"17","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":4,"line":145},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"18","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":157,"character":5}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"18","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"19","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":156,"character":1}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"19","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"20","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":155,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 402

{"id":"20","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":3,"line":155},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 7799

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":84},"contentChanges":[{"range":{"start":{"line":155,"character":2},"end":{"line":155,"character":2}},"text":"// "},{"range":{"start":{"line":154,"character":2},"end":{"line":154,"character":2}},"text":"// "},{"range":{"start":{"line":153,"character":2},"end":{"line":153,"character":2}},"text":"// "},{"range":{"start":{"line":152,"character":2},"end":{"line":152,"character":2}},"text":"// "},{"range":{"start":{"line":151,"character":2},"end":{"line":151,"character":2}},"text":"// "},{"range":{"start":{"line":150,"character":2},"end":{"line":150,"character":2}},"text":"// "},{"range":{"start":{"line":149,"character":2},"end":{"line":149,"character":2}},"text":"// "},{"range":{"start":{"line":148,"character":2},"end":{"line":148,"character":2}},"text":"// "},{"range":{"start":{"line":147,"character":2},"end":{"line":147,"character":2}},"text":"// "},{"range":{"start":{"line":146,"character":2},"end":{"line":146,"character":2}},"text":"// "},{"range":{"start":{"line":145,"character":2},"end":{"line":145,"character":2}},"text":"// "},{"range":{"start":{"line":144,"character":2},"end":{"line":144,"character":2}},"text":"// "},{"range":{"start":{"line":143,"character":2},"end":{"line":143,"character":2}},"text":"// "},{"range":{"start":{"line":142,"character":2},"end":{"line":142,"character":2}},"text":"// "},{"range":{"start":{"line":141,"character":2},"end":{"line":141,"character":2}},"text":"// "},{"range":{"start":{"line":140,"character":2},"end":{"line":140,"character":2}},"text":"// "},{"range":{"start":{"line":139,"character":2},"end":{"line":139,"character":2}},"text":"// "},{"range":{"start":{"line":138,"character":2},"end":{"line":138,"character":2}},"text":"// "},{"range":{"start":{"line":137,"character":2},"end":{"line":137,"character":2}},"text":"// "},{"range":{"start":{"line":136,"character":2},"end":{"line":136,"character":2}},"text":"// "},{"range":{"start":{"line":135,"character":2},"end":{"line":135,"character":2}},"text":"// "},{"range":{"start":{"line":134,"character":2},"end":{"line":134,"character":2}},"text":"// "},{"range":{"start":{"line":133,"character":2},"end":{"line":133,"character":2}},"text":"// "},{"range":{"start":{"line":132,"character":2},"end":{"line":132,"character":2}},"text":"// "},{"range":{"start":{"line":131,"character":2},"end":{"line":131,"character":2}},"text":"// "},{"range":{"start":{"line":130,"character":2},"end":{"line":130,"character":2}},"text":"// "},{"range":{"start":{"line":129,"character":2},"end":{"line":129,"character":2}},"text":"// "},{"range":{"start":{"line":128,"character":2},"end":{"line":128,"character":2}},"text":"// "},{"range":{"start":{"line":127,"character":2},"end":{"line":127,"character":2}},"text":"// "},{"range":{"start":{"line":126,"character":2},"end":{"line":126,"character":2}},"text":"// "},{"range":{"start":{"line":125,"character":2},"end":{"line":125,"character":2}},"text":"// "},{"range":{"start":{"line":124,"character":2},"end":{"line":124,"character":2}},"text":"// "},{"range":{"start":{"line":123,"character":2},"end":{"line":123,"character":2}},"text":"// "},{"range":{"start":{"line":122,"character":2},"end":{"line":122,"character":2}},"text":"// "},{"range":{"start":{"line":121,"character":2},"end":{"line":121,"character":2}},"text":"// "},{"range":{"start":{"line":120,"character":2},"end":{"line":120,"character":2}},"text":"// "},{"range":{"start":{"line":118,"character":2},"end":{"line":118,"character":2}},"text":"// "},{"range":{"start":{"line":117,"character":2},"end":{"line":117,"character":2}},"text":"// "},{"range":{"start":{"line":116,"character":2},"end":{"line":116,"character":2}},"text":"// "},{"range":{"start":{"line":115,"character":2},"end":{"line":115,"character":2}},"text":"// "},{"range":{"start":{"line":114,"character":2},"end":{"line":114,"character":2}},"text":"// "},{"range":{"start":{"line":113,"character":2},"end":{"line":113,"character":2}},"text":"// "},{"range":{"start":{"line":112,"character":2},"end":{"line":112,"character":2}},"text":"// "},{"range":{"start":{"line":111,"character":2},"end":{"line":111,"character":2}},"text":"// "},{"range":{"start":{"line":110,"character":2},"end":{"line":110,"character":2}},"text":"// "},{"range":{"start":{"line":109,"character":2},"end":{"line":109,"character":2}},"text":"// "},{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":2}},"text":"// "},{"range":{"start":{"line":107,"character":2},"end":{"line":107,"character":2}},"text":"// "},{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":2}},"text":"// "},{"range":{"start":{"line":104,"character":2},"end":{"line":104,"character":2}},"text":"// "},{"range":{"start":{"line":103,"character":2},"end":{"line":103,"character":2}},"text":"// "},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":2}},"text":"// "},{"range":{"start":{"line":101,"character":2},"end":{"line":101,"character":2}},"text":"// "},{"range":{"start":{"line":100,"character":2},"end":{"line":100,"character":2}},"text":"// "},{"range":{"start":{"line":99,"character":2},"end":{"line":99,"character":2}},"text":"// "},{"range":{"start":{"line":98,"character":2},"end":{"line":98,"character":2}},"text":"// "},{"range":{"start":{"line":97,"character":2},"end":{"line":97,"character":2}},"text":"// "},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":2}},"text":"// "},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":2}},"text":"// "},{"range":{"start":{"line":93,"character":2},"end":{"line":93,"character":2}},"text":"// "},{"range":{"start":{"line":91,"character":2},"end":{"line":91,"character":2}},"text":"// "},{"range":{"start":{"line":90,"character":2},"end":{"line":90,"character":2}},"text":"// "},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":2}},"text":"// "},{"range":{"start":{"line":88,"character":2},"end":{"line":88,"character":2}},"text":"// "},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":2}},"text":"// "},{"range":{"start":{"line":86,"character":2},"end":{"line":86,"character":2}},"text":"// "},{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":2}},"text":"// "},{"range":{"start":{"line":82,"character":2},"end":{"line":82,"character":2}},"text":"// "},{"range":{"start":{"line":81,"character":2},"end":{"line":81,"character":2}},"text":"// "},{"range":{"start":{"line":80,"character":2},"end":{"line":80,"character":2}},"text":"// "},{"range":{"start":{"line":79,"character":2},"end":{"line":79,"character":2}},"text":"// "},{"range":{"start":{"line":78,"character":2},"end":{"line":78,"character":2}},"text":"// "},{"range":{"start":{"line":77,"character":2},"end":{"line":77,"character":2}},"text":"// "},{"range":{"start":{"line":76,"character":2},"end":{"line":76,"character":2}},"text":"// "},{"range":{"start":{"line":75,"character":2},"end":{"line":75,"character":2}},"text":"// "},{"range":{"start":{"line":74,"character":2},"end":{"line":74,"character":2}},"text":"// "},{"range":{"start":{"line":72,"character":2},"end":{"line":72,"character":2}},"text":"// "},{"range":{"start":{"line":71,"character":2},"end":{"line":71,"character":2}},"text":"// "},{"range":{"start":{"line":70,"character":2},"end":{"line":70,"character":2}},"text":"// "},{"range":{"start":{"line":69,"character":2},"end":{"line":69,"character":2}},"text":"// "},{"range":{"start":{"line":66,"character":2},"end":{"line":66,"character":2}},"text":"// "},{"range":{"start":{"line":65,"character":2},"end":{"line":65,"character":2}},"text":"// "}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"21","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"21","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}Content-Length: 633

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":84}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"22","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"22","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"23","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":155,"character":6}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"23","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"24","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":155,"character":6},"end":{"line":155,"character":6}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"24","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6477

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":85},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 149 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 315

{"jsonrpc":"2.0","id":"25","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":64,"character":13},"end":{"line":64,"character":13}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"25","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 323

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":86},"contentChanges":[{"range":{"start":{"line":64,"character":13},"end":{"line":64,"character":13}},"text":"\n  "}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"26","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 111

{"id":2,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4549

{"id":"26","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 633

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":86}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"27","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"27","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6481

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":87},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  \n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 633

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":87}}
>>>
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":88},"contentChanges":[{"range":{"start":{"line":65,"character":2},"end":{"line":65,"character":2}},"text":"d"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"28","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 111

{"id":3,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4549

{"id":"28","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 838

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'd'","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":88}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"29","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"29","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":"30","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":3},"context":{"triggerKind":1}}}
<<<
Content-Length: 31327

{"id":"30","jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"detail":"uint8_t","filterText":"debounce","insertText":"debounce","insertTextFormat":1,"kind":6,"label":" debounce","score":1.3930001258850098,"sortText":"404db22cdebounce","textEdit":{"newText":"debounce","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEFAULT","insertText":"DEFAULT","insertTextFormat":1,"kind":1,"label":" DEFAULT","score":1.119854211807251,"sortText":"4070a89eDEFAULT","textEdit":{"newText":"DEFAULT","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DEG_TO_RAD","insertText":"DEG_TO_RAD","insertTextFormat":1,"kind":1,"label":" DEG_TO_RAD","score":1.119854211807251,"sortText":"4070a89eDEG_TO_RAD","textEdit":{"newText":"DEG_TO_RAD","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":1,"kind":1,"label":" DISPLAY","score":1.119854211807251,"sortText":"4070a89eDISPLAY","textEdit":{"newText":"DISPLAY","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"degrees","insertText":"degrees(${1:rad})","insertTextFormat":2,"kind":1,"label":" degrees(rad)","score":1.119854211807251,"sortText":"4070a89edegrees","textEdit":{"newText":"degrees(${1:rad})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToBitMask(P)","score":1.119854211807251,"sortText":"4070a89edigitalPinToBitMask","textEdit":{"newText":"digitalPinToBitMask(${1:P})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToPort(P)","score":1.119854211807251,"sortText":"4070a89edigitalPinToPort","textEdit":{"newText":"digitalPinToPort(${1:P})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToTimer(P)","score":1.119854211807251,"sortText":"4070a89edigitalPinToTimer","textEdit":{"newText":"digitalPinToTimer(${1:P})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DTOSTR_ALWAYS_SIGN","insertText":"DTOSTR_ALWAYS_SIGN","insertTextFormat":1,"kind":1,"label":" DTOSTR_ALWAYS_SIGN","score":0.99187564849853516,"sortText":"40821470DTOSTR_ALWAYS_SIGN","textEdit":{"newText":"DTOSTR_ALWAYS_SIGN","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DTOSTR_PLUS_SIGN","insertText":"DTOSTR_PLUS_SIGN","insertTextFormat":1,"kind":1,"label":" DTOSTR_PLUS_SIGN","score":0.99187564849853516,"sortText":"40821470DTOSTR_PLUS_SIGN","textEdit":{"newText":"DTOSTR_PLUS_SIGN","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DTOSTR_UPPERCASE","insertText":"DTOSTR_UPPERCASE","insertTextFormat":1,"kind":1,"label":" DTOSTR_UPPERCASE","score":0.99187564849853516,"sortText":"40821470DTOSTR_UPPERCASE","textEdit":{"newText":"DTOSTR_UPPERCASE","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"additionalTextEdits":[{"newText":"#include \"Print.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"filterText":"DEC","insertText":"DEC","insertTextFormat":1,"kind":1,"label":"•DEC","score":0.91739016771316528,"sortText":"409525ebDEC","textEdit":{"newText":"DEC","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"kind":3,"label":" digitalWrite(uint8_t pin, uint8_t val)","score":0.9139629602432251,"sortText":"40960686digitalWrite","textEdit":{"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DD0","insertText":"DD0","insertTextFormat":1,"kind":1,"label":" DD0","score":0.87653928995132446,"sortText":"409f9b1fDD0","textEdit":{"newText":"DD0","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DD1","insertText":"DD1","insertTextFormat":1,"kind":1,"label":" DD1","score":0.87653928995132446,"sortText":"409f9b1fDD1","textEdit":{"newText":"DD1","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DD2","insertText":"DD2","insertTextFormat":1,"kind":1,"label":" DD2","score":0.87653928995132446,"sortText":"409f9b1fDD2","textEdit":{"newText":"DD2","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DD3","insertText":"DD3","insertTextFormat":1,"kind":1,"label":" DD3","score":0.87653928995132446,"sortText":"409f9b1fDD3","textEdit":{"newText":"DD3","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DD4","insertText":"DD4","insertTextFormat":1,"kind":1,"label":" DD4","score":0.87653928995132446,"sortText":"409f9b1fDD4","textEdit":{"newText":"DD4","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DD5","insertText":"DD5","insertTextFormat":1,"kind":1,"label":" DD5","score":0.87653928995132446,"sortText":"409f9b1fDD5","textEdit":{"newText":"DD5","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DD6","insertText":"DD6","insertTextFormat":1,"kind":1,"label":" DD6","score":0.87653928995132446,"sortText":"409f9b1fDD6","textEdit":{"newText":"DD6","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DD7","insertText":"DD7","insertTextFormat":1,"kind":1,"label":" DD7","score":0.87653928995132446,"sortText":"409f9b1fDD7","textEdit":{"newText":"DD7","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDB0","insertText":"DDB0","insertTextFormat":1,"kind":1,"label":" DDB0","score":0.87653928995132446,"sortText":"409f9b1fDDB0","textEdit":{"newText":"DDB0","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDB1","insertText":"DDB1","insertTextFormat":1,"kind":1,"label":" DDB1","score":0.87653928995132446,"sortText":"409f9b1fDDB1","textEdit":{"newText":"DDB1","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDB2","insertText":"DDB2","insertTextFormat":1,"kind":1,"label":" DDB2","score":0.87653928995132446,"sortText":"409f9b1fDDB2","textEdit":{"newText":"DDB2","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDB3","insertText":"DDB3","insertTextFormat":1,"kind":1,"label":" DDB3","score":0.87653928995132446,"sortText":"409f9b1fDDB3","textEdit":{"newText":"DDB3","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDB4","insertText":"DDB4","insertTextFormat":1,"kind":1,"label":" DDB4","score":0.87653928995132446,"sortText":"409f9b1fDDB4","textEdit":{"newText":"DDB4","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDB5","insertText":"DDB5","insertTextFormat":1,"kind":1,"label":" DDB5","score":0.87653928995132446,"sortText":"409f9b1fDDB5","textEdit":{"newText":"DDB5","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDB6","insertText":"DDB6","insertTextFormat":1,"kind":1,"label":" DDB6","score":0.87653928995132446,"sortText":"409f9b1fDDB6","textEdit":{"newText":"DDB6","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDB7","insertText":"DDB7","insertTextFormat":1,"kind":1,"label":" DDB7","score":0.87653928995132446,"sortText":"409f9b1fDDB7","textEdit":{"newText":"DDB7","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDC0","insertText":"DDC0","insertTextFormat":1,"kind":1,"label":" DDC0","score":0.87653928995132446,"sortText":"409f9b1fDDC0","textEdit":{"newText":"DDC0","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDC1","insertText":"DDC1","insertTextFormat":1,"kind":1,"label":" DDC1","score":0.87653928995132446,"sortText":"409f9b1fDDC1","textEdit":{"newText":"DDC1","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDC2","insertText":"DDC2","insertTextFormat":1,"kind":1,"label":" DDC2","score":0.87653928995132446,"sortText":"409f9b1fDDC2","textEdit":{"newText":"DDC2","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDC3","insertText":"DDC3","insertTextFormat":1,"kind":1,"label":" DDC3","score":0.87653928995132446,"sortText":"409f9b1fDDC3","textEdit":{"newText":"DDC3","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDC4","insertText":"DDC4","insertTextFormat":1,"kind":1,"label":" DDC4","score":0.87653928995132446,"sortText":"409f9b1fDDC4","textEdit":{"newText":"DDC4","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDC5","insertText":"DDC5","insertTextFormat":1,"kind":1,"label":" DDC5","score":0.87653928995132446,"sortText":"409f9b1fDDC5","textEdit":{"newText":"DDC5","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDC6","insertText":"DDC6","insertTextFormat":1,"kind":1,"label":" DDC6","score":0.87653928995132446,"sortText":"409f9b1fDDC6","textEdit":{"newText":"DDC6","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDD0","insertText":"DDD0","insertTextFormat":1,"kind":1,"label":" DDD0","score":0.87653928995132446,"sortText":"409f9b1fDDD0","textEdit":{"newText":"DDD0","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDD1","insertText":"DDD1","insertTextFormat":1,"kind":1,"label":" DDD1","score":0.87653928995132446,"sortText":"409f9b1fDDD1","textEdit":{"newText":"DDD1","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDD2","insertText":"DDD2","insertTextFormat":1,"kind":1,"label":" DDD2","score":0.87653928995132446,"sortText":"409f9b1fDDD2","textEdit":{"newText":"DDD2","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDD3","insertText":"DDD3","insertTextFormat":1,"kind":1,"label":" DDD3","score":0.87653928995132446,"sortText":"409f9b1fDDD3","textEdit":{"newText":"DDD3","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDD4","insertText":"DDD4","insertTextFormat":1,"kind":1,"label":" DDD4","score":0.87653928995132446,"sortText":"409f9b1fDDD4","textEdit":{"newText":"DDD4","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDD5","insertText":"DDD5","insertTextFormat":1,"kind":1,"label":" DDD5","score":0.87653928995132446,"sortText":"409f9b1fDDD5","textEdit":{"newText":"DDD5","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDD6","insertText":"DDD6","insertTextFormat":1,"kind":1,"label":" DDD6","score":0.87653928995132446,"sortText":"409f9b1fDDD6","textEdit":{"newText":"DDD6","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDD7","insertText":"DDD7","insertTextFormat":1,"kind":1,"label":" DDD7","score":0.87653928995132446,"sortText":"409f9b1fDDD7","textEdit":{"newText":"DDD7","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDRB","insertText":"DDRB","insertTextFormat":1,"kind":1,"label":" DDRB","score":0.87653928995132446,"sortText":"409f9b1fDDRB","textEdit":{"newText":"DDRB","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDRC","insertText":"DDRC","insertTextFormat":1,"kind":1,"label":" DDRC","score":0.87653928995132446,"sortText":"409f9b1fDDRC","textEdit":{"newText":"DDRC","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DDRD","insertText":"DDRD","insertTextFormat":1,"kind":1,"label":" DDRD","score":0.87653928995132446,"sortText":"409f9b1fDDRD","textEdit":{"newText":"DDRD","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":1,"kind":1,"label":" DIDR0","score":0.87653928995132446,"sortText":"409f9b1fDIDR0","textEdit":{"newText":"DIDR0","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":1,"kind":1,"label":" DIDR1","score":0.87653928995132446,"sortText":"409f9b1fDIDR1","textEdit":{"newText":"DIDR1","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DOR0","insertText":"DOR0","insertTextFormat":1,"kind":1,"label":" DOR0","score":0.87653928995132446,"sortText":"409f9b1fDOR0","textEdit":{"newText":"DOR0","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DORD","insertText":"DORD","insertTextFormat":1,"kind":1,"label":" DORD","score":0.87653928995132446,"sortText":"409f9b1fDORD","textEdit":{"newText":"DORD","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinHasPWM(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinHasPWM","textEdit":{"newText":"digitalPinHasPWM(${1:p})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToInterrupt(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToInterrupt","textEdit":{"newText":"digitalPinToInterrupt(${1:p})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICR(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToPCICR","textEdit":{"newText":"digitalPinToPCICR(${1:p})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICRbit(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToPCICRbit","textEdit":{"newText":"digitalPinToPCICRbit(${1:p})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSK(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToPCMSK","textEdit":{"newText":"digitalPinToPCMSK(${1:p})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSKbit(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToPCMSKbit","textEdit":{"newText":"digitalPinToPCMSKbit(${1:p})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"kind":3,"label":" digitalRead(uint8_t pin)","score":0.83908885717391968,"sortText":"40a93179digitalRead","textEdit":{"newText":"digitalRead(${1:uint8_t pin})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"decltype","insertText":"decltype(${0:expression})","insertTextFormat":2,"kind":15,"label":" decltype(expression)","score":0.8373723030090332,"sortText":"40a9a1f8decltype","textEdit":{"newText":"decltype(${0:expression})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","filterText":"delete","insertText":"delete [] ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete [] expression","score":0.8373723030090332,"sortText":"40a9a1f8delete","textEdit":{"newText":"delete [] ${0:expression}","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","filterText":"delete","insertText":"delete ${0:expression}","insertTextFormat":2,"kind":15,"label":" delete expression","score":0.8373723030090332,"sortText":"40a9a1f8delete","textEdit":{"newText":"delete ${0:expression}","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"do","insertText":"do {\n${1:statements}\n}while (${0:expression})","insertTextFormat":2,"kind":15,"label":" do {statements}while (expression)","score":0.8373723030090332,"sortText":"40a9a1f8do","textEdit":{"newText":"do {\n${1:statements}\n}while (${0:expression})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"double","insertText":"double","insertTextFormat":1,"kind":14,"label":" double","score":0.8373723030090332,"sortText":"40a9a1f8double","textEdit":{"newText":"double","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"dynamic_cast","insertText":"dynamic_cast<${1:type}>(${0:expression})","insertTextFormat":2,"kind":15,"label":" dynamic_cast<type>(expression)","score":0.8373723030090332,"sortText":"40a9a1f8dynamic_cast","textEdit":{"newText":"dynamic_cast<${1:type}>(${0:expression})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"filterText":"div_t","insertText":"div_t","insertTextFormat":1,"kind":8,"label":" div_t","score":0.6612544059753418,"sortText":"40d6b808div_t","textEdit":{"newText":"div_t","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":1,"kind":6,"label":" digital_pin_to_bit_mask_PGM","score":0.64282059669494629,"sortText":"40db701cdigital_pin_to_bit_mask_PGM","textEdit":{"newText":"digital_pin_to_bit_mask_PGM","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":1,"kind":6,"label":" digital_pin_to_port_PGM","score":0.64282059669494629,"sortText":"40db701cdigital_pin_to_port_PGM","textEdit":{"newText":"digital_pin_to_port_PGM","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":1,"kind":6,"label":" digital_pin_to_timer_PGM","score":0.5698472261428833,"sortText":"40ee1e7edigital_pin_to_timer_PGM","textEdit":{"newText":"digital_pin_to_timer_PGM","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"filterText":"div","insertText":"div(${1:int num}, ${2:int denom})","insertTextFormat":2,"kind":3,"label":" div(int num, int denom)","score":0.51126337051391602,"sortText":"40fd1dd8div","textEdit":{"newText":"div(${1:int num}, ${2:int denom})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostre() function converts the double value passed in \\\\c val into an ASCII representation that will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddde�dd\" where there is one digit before the decimal-point character and the number of digits after it is equal to the precision \\\\c prec; if the precision is zero, no decimal-point character appears. If \\\\c flags has the DTOSTR_UPPERCASE bit set, the letter \\\\c 'E' (rather than \\\\c 'e' ) will be used to introduce the exponent. The exponent always contains two digits; if the value is zero, the exponent is \\\\c \"00\".  \nIf \\\\c flags has the DTOSTR_ALWAYS_SIGN bit set, a space character will be placed into the leading position for positive numbers.  \nIf \\\\c flags has the DTOSTR_PLUS_SIGN bit set, a plus sign will be used instead of a space character in this case.  \nThe dtostre() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostre","insertText":"dtostre(${1:double val}, ${2:char *s}, ${3:unsigned char prec}, ${4:unsigned char flags})","insertTextFormat":2,"kind":3,"label":" dtostre(double val, char *s, unsigned char prec, unsigned char flags)","score":0.51126337051391602,"sortText":"40fd1dd8dtostre","textEdit":{"newText":"dtostre(${1:double val}, ${2:char *s}, ${3:unsigned char prec}, ${4:unsigned char flags})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"delay","insertText":"delay(${1:unsigned long ms})","insertTextFormat":2,"kind":3,"label":" delay(unsigned long ms)","score":0.50215232372283936,"sortText":"40ff72f2delay","textEdit":{"newText":"delay(${1:unsigned long ms})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nDelay for the given number of microseconds. Assumes a 1, 8, 12, 16, 20 or 24 MHz clock."},"filterText":"delayMicroseconds","insertText":"delayMicroseconds(${1:unsigned int us})","insertTextFormat":2,"kind":3,"label":" delayMicroseconds(unsigned int us)","score":0.50215232372283936,"sortText":"40ff72f2delayMicroseconds","textEdit":{"newText":"delayMicroseconds(${1:unsigned int us})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"kind":3,"label":" detachInterrupt(uint8_t interruptNum)","score":0.50215232372283936,"sortText":"40ff72f2detachInterrupt","textEdit":{"newText":"detachInterrupt(${1:uint8_t interruptNum})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"char *","documentation":{"kind":"markdown","value":"\\\\ingroup avr_stdlib The dtostrf() function converts the double value passed in \\\\c val into an ASCII representationthat will be stored under \\\\c s. The caller is responsible for providing sufficient storage in \\\\c s.  \nConversion is done in the format \\\\c \"[-]d.ddd\". The minimum field width of the output string (including the possible \\\\c '.' and the possible sign for negative values) is given in \\\\c width, and \\\\c prec determines the number of digits after the decimal sign. \\\\c width is signed value,  \nnegative for left adjustment.  \nThe dtostrf() function returns the pointer to the converted string \\\\c s."},"filterText":"dtostrf","insertText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *s})","insertTextFormat":2,"kind":3,"label":" dtostrf(double val, signed char width, unsigned char prec, char *s)","score":0.49856337904930115,"sortText":"4100bc4ddtostrf","textEdit":{"newText":"dtostrf(${1:double val}, ${2:signed char width}, ${3:unsigned char prec}, ${4:char *s})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup util_delay  \nPerform a delay of \\\\c \\_\\_ms milliseconds, using \\_delay_loop_2().  \nThe macro F_CPU is supposed to be defined to a constant defining the CPU clock frequency (in Hertz).  \nThe maximal possible delay is 262.14 ms / F_CPU in MHz.  \nWhen the user request delay which exceed the maximum possible one,  \n\\_delay_ms() provides a decreased resolution functionality. In this mode \\_delay_ms() will work with a resolution of 1/10 ms, providing delays up to 6.5535 seconds (independent from CPU frequency). The user will not be informed about decreased resolution.  \nIf the avr-gcc toolchain has \\_\\_builtin_avr_delay_cycles() support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For values greater than the maximal possible delay, overflows results in no delay i.e., 0ms.  \nConversion of \\\\c \\_\\_ms into clock cycles may not always result in integer. By default, the clock cycles rounded up to next integer. This ensures that the user gets at least \\\\c \\_\\_ms microseconds of delay.  \nAlternatively, by defining the macro \\\\c \\_\\_DELAY_ROUND_DOWN\\_\\_, or  \n\\\\c \\_\\_DELAY_ROUND_CLOSEST\\_\\_, before including this header file, the algorithm can be made to round down, or round to closest integer,  \nrespectively.  \n\\\\note  \nThe implementation of \\_delay_ms() based on \\_\\_builtin_avr_delay_cycles() is not backward compatible with older implementations. In order to get functionality backward compatible with previous versions, the macro \\\\c \"\\_\\_DELAY_BACKWARD_COMPATIBLE\\_\\_\" must be defined before including this header file. Also, the backward compatible algorithm will be chosen if the code is compiled in a \\<em>freestanding environment\\</em> (GCC option  \n\\\\c -ffreestanding), as the math functions required for rounding are not available to the compiler then."},"filterText":"_delay_ms","insertText":"_delay_ms(${1:double ms})","insertTextFormat":2,"kind":3,"label":" _delay_ms(double ms)","score":0.48016020655632019,"sortText":"80000000_delay_ms","textEdit":{"newText":"_delay_ms(${1:double ms})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","documentation":{"kind":"markdown","value":"\\\\ingroup util_delay  \nPerform a delay of \\\\c \\_\\_us microseconds, using \\_delay_loop_1().  \nThe macro F_CPU is supposed to be defined to a constant defining the CPU clock frequency (in Hertz).  \nThe maximal possible delay is 768 us / F_CPU in MHz.  \nIf the user requests a delay greater than the maximal possible one,  \n\\_delay_us() will automatically call \\_delay_ms() instead. The user will not be informed about this case.  \nIf the avr-gcc toolchain has \\_\\_builtin_avr_delay_cycles() support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For values greater than the maximal possible delay, overflow results in no delay i.e., 0us.  \nConversion of \\\\c \\_\\_us into clock cycles may not always result in integer. By default, the clock cycles rounded up to next integer. This ensures that the user gets at least \\\\c \\_\\_us microseconds of delay.  \nAlternatively, by defining the macro \\\\c \\_\\_DELAY_ROUND_DOWN\\_\\_, or  \n\\\\c \\_\\_DELAY_ROUND_CLOSEST\\_\\_, before including this header file, the algorithm can be made to round down, or round to closest integer,  \nrespectively.  \n\\\\note  \nThe implementation of \\_delay_ms() based on \\_\\_builtin_avr_delay_cycles() is not backward compatible with older implementations. In order to get functionality backward compatible with previous versions, the macro \\\\c \\_\\_DELAY_BACKWARD_COMPATIBLE\\_\\_ must be defined before including this header file. Also, the backward compatible algorithm will be chosen if the code is compiled in a \\<em>freestanding environment\\</em> (GCC option  \n\\\\c -ffreestanding), as the math functions required for rounding are not available to the compiler then."},"filterText":"_delay_us","insertText":"_delay_us(${1:double us})","insertTextFormat":2,"kind":3,"label":" _delay_us(double us)","score":0.48016020655632019,"sortText":"80000000_delay_us","textEdit":{"newText":"_delay_us(${1:double us})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a digit (0 through 9)."},"filterText":"isDigit","insertText":"isDigit(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isDigit(int c)","score":0.51126337051391602,"sortText":"80000000isDigit","textEdit":{"newText":"isDigit(${1:int c})","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"additionalTextEdits":[{"newText":"#include <new>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `<new>`"},"filterText":"operator delete","insertText":"operator delete($0)","insertTextFormat":2,"kind":3,"label":"•operator delete(…)","score":0.43098646402359009,"sortText":"80000000operator delete","textEdit":{"newText":"operator delete($0)","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"additionalTextEdits":[{"newText":"#include <new>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"detail":"[3 overloads]","documentation":{"kind":"markdown","value":"From `<new>`"},"filterText":"operator delete[]","insertText":"operator delete[]($0)","insertTextFormat":2,"kind":3,"label":"•operator delete[](…)","score":0.39862674474716187,"sortText":"80000000operator delete[]","textEdit":{"newText":"operator delete[]($0)","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","filterText":"wdt_disable","insertText":"wdt_disable()","insertTextFormat":2,"kind":3,"label":" wdt_disable()","score":0.44337138533592224,"sortText":"80000000wdt_disable","textEdit":{"newText":"wdt_disable()","range":{"end":{"character":3,"line":65},"start":{"character":2,"line":65}}}}]}}
>>>
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":89},"contentChanges":[{"range":{"start":{"line":65,"character":3},"end":{"line":65,"character":3}},"text":"i"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"31","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"31","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 839

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'di'","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":89}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"32","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"32","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 273

{"jsonrpc":"2.0","id":"33","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":4},"context":{"triggerKind":3}}}
<<<
Content-Length: 8703

{"id":"33","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToBitMask","insertText":"digitalPinToBitMask(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToBitMask(P)","score":1.119854211807251,"sortText":"4070a89edigitalPinToBitMask","textEdit":{"newText":"digitalPinToBitMask(${1:P})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToPort","insertText":"digitalPinToPort(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToPort(P)","score":1.119854211807251,"sortText":"4070a89edigitalPinToPort","textEdit":{"newText":"digitalPinToPort(${1:P})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalPinToTimer","insertText":"digitalPinToTimer(${1:P})","insertTextFormat":2,"kind":1,"label":" digitalPinToTimer(P)","score":1.119854211807251,"sortText":"4070a89edigitalPinToTimer","textEdit":{"newText":"digitalPinToTimer(${1:P})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"DISPLAY","insertText":"DISPLAY","insertTextFormat":1,"kind":1,"label":" DISPLAY","score":1.119854211807251,"sortText":"40852714DISPLAY","textEdit":{"newText":"DISPLAY","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalWrite","insertText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","insertTextFormat":2,"kind":3,"label":" digitalWrite(uint8_t pin, uint8_t val)","score":0.9139629602432251,"sortText":"40960686digitalWrite","textEdit":{"newText":"digitalWrite(${1:uint8_t pin}, ${2:uint8_t val})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinHasPWM","insertText":"digitalPinHasPWM(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinHasPWM(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinHasPWM","textEdit":{"newText":"digitalPinHasPWM(${1:p})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToInterrupt","insertText":"digitalPinToInterrupt(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToInterrupt(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToInterrupt","textEdit":{"newText":"digitalPinToInterrupt(${1:p})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToPCICR","insertText":"digitalPinToPCICR(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICR(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToPCICR","textEdit":{"newText":"digitalPinToPCICR(${1:p})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToPCICRbit","insertText":"digitalPinToPCICRbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCICRbit(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToPCICRbit","textEdit":{"newText":"digitalPinToPCICRbit(${1:p})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToPCMSK","insertText":"digitalPinToPCMSK(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSK(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToPCMSK","textEdit":{"newText":"digitalPinToPCMSK(${1:p})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"digitalPinToPCMSKbit","insertText":"digitalPinToPCMSKbit(${1:p})","insertTextFormat":2,"kind":1,"label":" digitalPinToPCMSKbit(p)","score":0.87653928995132446,"sortText":"409f9b1fdigitalPinToPCMSKbit","textEdit":{"newText":"digitalPinToPCMSKbit(${1:p})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"detail":"int","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digitalRead","insertText":"digitalRead(${1:uint8_t pin})","insertTextFormat":2,"kind":3,"label":" digitalRead(uint8_t pin)","score":0.83908885717391968,"sortText":"40a93179digitalRead","textEdit":{"newText":"digitalRead(${1:uint8_t pin})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DIDR0","insertText":"DIDR0","insertTextFormat":1,"kind":1,"label":" DIDR0","score":0.87653928995132446,"sortText":"40bba7bbDIDR0","textEdit":{"newText":"DIDR0","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"filterText":"DIDR1","insertText":"DIDR1","insertTextFormat":1,"kind":1,"label":" DIDR1","score":0.87653928995132446,"sortText":"40bba7bbDIDR1","textEdit":{"newText":"DIDR1","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"documentation":{"kind":"markdown","value":"@{  \nResult type for function div()."},"filterText":"div_t","insertText":"div_t","insertTextFormat":1,"kind":8,"label":" div_t","score":0.6612544059753418,"sortText":"40d6b808div_t","textEdit":{"newText":"div_t","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`  \nextern const uint8_t PROGMEM digital_pin_to_bit_PGM[];"},"filterText":"digital_pin_to_bit_mask_PGM","insertText":"digital_pin_to_bit_mask_PGM","insertTextFormat":1,"kind":6,"label":" digital_pin_to_bit_mask_PGM","score":0.64282059669494629,"sortText":"40db701cdigital_pin_to_bit_mask_PGM","textEdit":{"newText":"digital_pin_to_bit_mask_PGM","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_port_PGM","insertText":"digital_pin_to_port_PGM","insertTextFormat":1,"kind":6,"label":" digital_pin_to_port_PGM","score":0.64282059669494629,"sortText":"40db701cdigital_pin_to_port_PGM","textEdit":{"newText":"digital_pin_to_port_PGM","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"detail":"const uint8_t[]","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"digital_pin_to_timer_PGM","insertText":"digital_pin_to_timer_PGM","insertTextFormat":1,"kind":6,"label":" digital_pin_to_timer_PGM","score":0.5698472261428833,"sortText":"40ee1e7edigital_pin_to_timer_PGM","textEdit":{"newText":"digital_pin_to_timer_PGM","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"detail":"div_t","documentation":{"kind":"markdown","value":"\\_\\_divmodhi4 and \\_\\_divmodsi4 from libgcc.a  \nThe div() function computes the value \\\\c num/denom and returns the quotient and remainder in a structure named \\\\c div_t that contains two int members named \\\\c quot and \\\\c rem."},"filterText":"div","insertText":"div(${1:int num}, ${2:int denom})","insertTextFormat":2,"kind":3,"label":" div(int num, int denom)","score":0.51126337051391602,"sortText":"40fd1dd8div","textEdit":{"newText":"div(${1:int num}, ${2:int denom})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"detachInterrupt","insertText":"detachInterrupt(${1:uint8_t interruptNum})","insertTextFormat":2,"kind":3,"label":" detachInterrupt(uint8_t interruptNum)","score":0.50215232372283936,"sortText":"413f2c6bdetachInterrupt","textEdit":{"newText":"detachInterrupt(${1:uint8_t interruptNum})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a digit (0 through 9)."},"filterText":"isDigit","insertText":"isDigit(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isDigit(int c)","score":0.51126337051391602,"sortText":"41bbacc4isDigit","textEdit":{"newText":"isDigit(${1:int c})","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}},{"detail":"void","filterText":"wdt_disable","insertText":"wdt_disable()","insertTextFormat":2,"kind":3,"label":" wdt_disable()","score":0.44337138533592224,"sortText":"41d5bed2wdt_disable","textEdit":{"newText":"wdt_disable()","range":{"end":{"character":4,"line":65},"start":{"character":2,"line":65}}}}]}}
>>>
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":90},"contentChanges":[{"range":{"start":{"line":65,"character":4},"end":{"line":65,"character":4}},"text":"g"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"34","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"34","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1369

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'dig'; did you mean 'div'? (fix available)","range":{"end":{"character":5,"line":65},"start":{"character":2,"line":65}},"relatedInformation":[{"location":{"range":{"end":{"character":16,"line":161},"start":{"character":13,"line":161}},"uri":"file:///C:/Users/DEXTER/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/stdlib.h"},"message":"'div' declared here"}],"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":5,"line":65},"start":{"character":5,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":90}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"35","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"35","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":91},"contentChanges":[{"range":{"start":{"line":65,"character":5},"end":{"line":65,"character":5}},"text":"i"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"36","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"36","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 841

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'digi'","range":{"end":{"character":6,"line":65},"start":{"character":2,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":91}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"37","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"37","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":92},"contentChanges":[{"range":{"start":{"line":65,"character":6},"end":{"line":65,"character":6}},"text":"t"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"38","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"38","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 842

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'digit'","range":{"end":{"character":7,"line":65},"start":{"character":2,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":92}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"39","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"39","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 313

{"jsonrpc":"2.0","id":"40","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":7},"end":{"line":65,"character":7}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"40","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":93},"contentChanges":[{"range":{"start":{"line":65,"character":7},"end":{"line":65,"character":7}},"text":"a"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"41","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"41","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 843

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'digita'","range":{"end":{"character":8,"line":65},"start":{"character":2,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":93}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"42","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"42","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":94},"contentChanges":[{"range":{"start":{"line":65,"character":8},"end":{"line":65,"character":8}},"text":"l"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"43","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"43","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 844

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'digital'","range":{"end":{"character":9,"line":65},"start":{"character":2,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":94}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"44","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"44","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 313

{"jsonrpc":"2.0","id":"45","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":9},"end":{"line":65,"character":9}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"45","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":95},"contentChanges":[{"range":{"start":{"line":65,"character":9},"end":{"line":65,"character":9}},"text":"W"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"46","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"46","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 846

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'digitalW'","range":{"end":{"character":10,"line":65},"start":{"character":2,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":95}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"47","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"47","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"48","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":10},"end":{"line":65,"character":10}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"48","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 356

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":96},"contentChanges":[{"range":{"start":{"line":65,"character":2},"end":{"line":65,"character":10}},"text":"digitalWrite(uint8_t pin, uint8_t val)"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"49","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 111

{"id":4,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4549

{"id":"49","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1085

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'uint8_t': expected expression","range":{"end":{"character":22,"line":65},"start":{"character":15,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'uint8_t': expected expression","range":{"end":{"character":35,"line":65},"start":{"character":28,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":96}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"50","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"50","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"51","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":15},"end":{"line":65,"character":26}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"51","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6519

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":97},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(uint8_t pin, uint8_t val)\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 320

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":98},"contentChanges":[{"range":{"start":{"line":65,"character":15},"end":{"line":65,"character":26}},"text":"l"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"52","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 111

{"id":5,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4549

{"id":"52","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1066

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'uint8_t': expected expression","range":{"end":{"character":25,"line":65},"start":{"character":18,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'l'","range":{"end":{"character":16,"line":65},"start":{"character":15,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":98}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"53","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"53","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"54","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":16},"end":{"line":65,"character":16}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"54","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":99},"contentChanges":[{"range":{"start":{"line":65,"character":16},"end":{"line":65,"character":16}},"text":"i"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"55","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"55","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1067

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'uint8_t': expected expression","range":{"end":{"character":26,"line":65},"start":{"character":19,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'li'","range":{"end":{"character":17,"line":65},"start":{"character":15,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":99}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"56","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"56","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":100},"contentChanges":[{"range":{"start":{"line":65,"character":17},"end":{"line":65,"character":17}},"text":"g"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"57","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"57","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1372

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'uint8_t': expected expression","range":{"end":{"character":27,"line":65},"start":{"character":20,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use_suggest","message":"Use of undeclared identifier 'lig'; did you mean 'log'? (fix available)","range":{"end":{"character":18,"line":65},"start":{"character":15,"line":65}},"relatedInformation":[{"location":{"range":{"end":{"character":17,"line":304},"start":{"character":14,"line":304}},"uri":"file:///C:/Users/DEXTER/AppData/Local/Arduino15/packages/arduino/tools/avr-gcc/7.3.0-atmel3.6.1-arduino7/avr/include/math.h"},"message":"'log' declared here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":100}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"58","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"58","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"59","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":18},"end":{"line":65,"character":18}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"59","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":101},"contentChanges":[{"range":{"start":{"line":65,"character":18},"end":{"line":65,"character":18}},"text":"h"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"60","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"60","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1070

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'uint8_t': expected expression","range":{"end":{"character":28,"line":65},"start":{"character":21,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'ligh'","range":{"end":{"character":19,"line":65},"start":{"character":15,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":101}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"61","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"61","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"62","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":19},"end":{"line":65,"character":19}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"62","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":102},"contentChanges":[{"range":{"start":{"line":65,"character":19},"end":{"line":65,"character":19}},"text":"t"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"63","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"63","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1071

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'uint8_t': expected expression","range":{"end":{"character":29,"line":65},"start":{"character":22,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'light'","range":{"end":{"character":20,"line":65},"start":{"character":15,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":102}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"64","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"64","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"65","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":20},"end":{"line":65,"character":20}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"65","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":103},"contentChanges":[{"range":{"start":{"line":65,"character":20},"end":{"line":65,"character":20}},"text":"2"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"66","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"66","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 860

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"unexpected_typedef","message":"Unexpected type name 'uint8_t': expected expression","range":{"end":{"character":30,"line":65},"start":{"character":23,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":103}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"67","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"67","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"68","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":21},"end":{"line":65,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 403

{"id":"68","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":21,"line":65},"start":{"character":21,"line":65}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'light2'"},"kind":"refactor","title":"Expand macro 'light2'"}]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6515

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":104},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light2, uint8_t val)\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 111

{"id":6,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"69","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":32}}}
<<<
Content-Length: 41

{"id":"69","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"70","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":33}}}
<<<
Content-Length: 41

{"id":"70","jsonrpc":"2.0","result":null}
>>>
Content-Length: 253

{"jsonrpc":"2.0","id":"71","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":34}}}
<<<
Content-Length: 39

{"id":"71","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"72","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":34},"end":{"line":65,"character":34}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"72","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"73","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":23},"end":{"line":65,"character":34}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"73","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"74","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":22}}}
<<<
Content-Length: 41

{"id":"74","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":105},"contentChanges":[{"range":{"start":{"line":65,"character":23},"end":{"line":65,"character":34}},"text":"h"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"75","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"75","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1067

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":25,"line":65},"start":{"character":25,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'h'","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":105}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"76","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"76","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":106},"contentChanges":[{"range":{"start":{"line":65,"character":24},"end":{"line":65,"character":24}},"text":"i"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"77","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"77","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1068

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":26,"line":65},"start":{"character":26,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'hi'","range":{"end":{"character":25,"line":65},"start":{"character":23,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":106}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"78","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"78","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"79","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":25},"end":{"line":65,"character":25}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"79","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":107},"contentChanges":[{"range":{"start":{"line":65,"character":24},"end":{"line":65,"character":25}},"text":""}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"80","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"80","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1067

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":25,"line":65},"start":{"character":25,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'h'","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":107}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"81","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"81","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":108},"contentChanges":[{"range":{"start":{"line":65,"character":23},"end":{"line":65,"character":24}},"text":""}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"82","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"82","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 829

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_expression","message":"Expected expression","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":108}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"83","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"83","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"84","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":23},"end":{"line":65,"character":23}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"84","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":109},"contentChanges":[{"range":{"start":{"line":65,"character":23},"end":{"line":65,"character":23}},"text":"H"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"85","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"85","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1067

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":25,"line":65},"start":{"character":25,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'H'","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":109}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"86","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"86","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 274

{"jsonrpc":"2.0","id":"87","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":24},"context":{"triggerKind":1}}}
<<<
Content-Length: 5286

{"id":"87","jsonrpc":"2.0","result":{"isIncomplete":true,"items":[{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"HALF_PI","insertText":"HALF_PI","insertTextFormat":1,"kind":1,"label":" HALF_PI","score":0.96590983867645264,"sortText":"4088ba22HALF_PI","textEdit":{"newText":"HALF_PI","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"HIGH","insertText":"HIGH","insertTextFormat":1,"kind":1,"label":" HIGH","score":0.96590983867645264,"sortText":"4088ba22HIGH","textEdit":{"newText":"HIGH","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"highByte","insertText":"highByte(${1:w})","insertTextFormat":2,"kind":1,"label":" highByte(w)","score":0.96590983867645264,"sortText":"4088ba22highByte","textEdit":{"newText":"highByte(${1:w})","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"HAVE_HWSERIAL0","insertText":"HAVE_HWSERIAL0","insertTextFormat":1,"kind":1,"label":"•HAVE_HWSERIAL0","score":0.81600278615951538,"sortText":"40af1a71HAVE_HWSERIAL0","textEdit":{"newText":"HAVE_HWSERIAL0","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"filterText":"hypotf","insertText":"hypotf","insertTextFormat":1,"kind":1,"label":" hypotf","score":0.81600278615951538,"sortText":"40af1a71hypotf","textEdit":{"newText":"hypotf","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"additionalTextEdits":[{"newText":"#include \"Print.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"Print.h\"`"},"filterText":"HEX","insertText":"HEX","insertTextFormat":1,"kind":1,"label":"•HEX","score":0.81135565042495728,"sortText":"40b04affHEX","textEdit":{"newText":"HEX","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"filterText":"HFUSE_DEFAULT","insertText":"HFUSE_DEFAULT","insertTextFormat":1,"kind":1,"label":" HFUSE_DEFAULT","score":0.75043845176696777,"sortText":"40bfe344HFUSE_DEFAULT","textEdit":{"newText":"HFUSE_DEFAULT","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"additionalTextEdits":[{"newText":"#include \"HardwareSerial.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"documentation":{"kind":"markdown","value":"From `\"HardwareSerial.h\"`"},"filterText":"HardwareSerial","insertText":"HardwareSerial","insertTextFormat":1,"kind":7,"label":"•HardwareSerial","score":0.588878333568573,"sortText":"40e93f45HardwareSerial","textEdit":{"newText":"HardwareSerial","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"detail":"double","documentation":{"kind":"markdown","value":"The hypot() function returns \\<em>sqrt(\\_\\_x\\*\\_\\_x + \\_\\_y\\*\\_\\_y)\\</em>. This is the length of the hypotenuse of a right triangle with sides of length \\\\a \\_\\_x and \\\\a \\_\\_y, or the distance of the point (\\\\a \\_\\_x, \\\\a \\_\\_y) from the origin. Using this function instead of the direct formula is wise, since the error is much smaller. No underflow with small \\\\a \\_\\_x and \\\\a \\_\\_y. No overflow if result is in range."},"filterText":"hypot","insertText":"hypot(${1:double x}, ${2:double y})","insertTextFormat":2,"kind":3,"label":" hypot(double x, double y)","score":0.44753560423851013,"sortText":"411adc9dhypot","textEdit":{"newText":"hypot(${1:double x}, ${2:double y})","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"additionalTextEdits":[{"newText":"#include \"WCharacter.h\"\n","range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}}}],"detail":"boolean","documentation":{"kind":"markdown","value":"From `\"WCharacter.h\"`  \nChecks for a hexadecimal digits, i.e. one of 0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F."},"filterText":"isHexadecimalDigit","insertText":"isHexadecimalDigit(${1:int c})","insertTextFormat":2,"kind":3,"label":"•isHexadecimalDigit(int c)","score":0.44753560423851013,"sortText":"80000000isHexadecimalDigit","textEdit":{"newText":"isHexadecimalDigit(${1:int c})","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}},{"additionalTextEdits":[{"newText":"#include <new>\n","range":{"end":{"character":0,"line":1},"start":{"character":0,"line":1}}}],"documentation":{"kind":"markdown","value":"From `<new>`  \nThese are not actually implemented, to prevent overhead and complexity. They are still declared to allow implementing them in user code if needed."},"filterText":"new_handler","insertText":"std::new_handler","insertTextFormat":1,"kind":8,"label":"•std::new_handler","score":0.53914469480514526,"sortText":"80000000new_handler","textEdit":{"newText":"std::new_handler","range":{"end":{"character":24,"line":65},"start":{"character":23,"line":65}}}}]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":110},"contentChanges":[{"range":{"start":{"line":65,"character":24},"end":{"line":65,"character":24}},"text":"I"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"88","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"88","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1068

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":26,"line":65},"start":{"character":26,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'HI'","range":{"end":{"character":25,"line":65},"start":{"character":23,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":110}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"89","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"89","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 274

{"jsonrpc":"2.0","id":"90","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":25},"context":{"triggerKind":3}}}
<<<
Content-Length: 742

{"id":"90","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"HIGH","insertText":"HIGH","insertTextFormat":1,"kind":1,"label":" HIGH","score":0.96590983867645264,"sortText":"4088ba22HIGH","textEdit":{"newText":"HIGH","range":{"end":{"character":25,"line":65},"start":{"character":23,"line":65}}}},{"documentation":{"kind":"markdown","value":"From `\"Arduino.h\"`"},"filterText":"highByte","insertText":"highByte(${1:w})","insertTextFormat":2,"kind":1,"label":" highByte(w)","score":0.96590983867645264,"sortText":"40a7a2dehighByte","textEdit":{"newText":"highByte(${1:w})","range":{"end":{"character":25,"line":65},"start":{"character":23,"line":65}}}}]}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":111},"contentChanges":[{"range":{"start":{"line":65,"character":25},"end":{"line":65,"character":25}},"text":"G"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"91","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"91","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 1069

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":27,"line":65},"start":{"character":27,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"},{"code":"undeclared_var_use","message":"Use of undeclared identifier 'HIG'","range":{"end":{"character":26,"line":65},"start":{"character":23,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":111}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"92","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"92","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":112},"contentChanges":[{"range":{"start":{"line":65,"character":26},"end":{"line":65,"character":26}},"text":"H"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"93","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"93","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 860

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"},{"code":"expected_semi_after_expr","message":"Expected ';' after expression (fix available)","range":{"end":{"character":28,"line":65},"start":{"character":28,"line":65}},"relatedInformation":[],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":112}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"94","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"94","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"95","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":27},"end":{"line":65,"character":27}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 399

{"id":"95","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":27,"line":65},"start":{"character":27,"line":65}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'HIGH'"},"kind":"refactor","title":"Expand macro 'HIGH'"}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"96","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":28},"end":{"line":65,"character":28}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"96","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":113},"contentChanges":[{"range":{"start":{"line":65,"character":28},"end":{"line":65,"character":28}},"text":";"}]}}Content-Length: 212

{"jsonrpc":"2.0","id":"97","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 111

{"id":7,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4549

{"id":"97","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":113}}
>>>
Content-Length: 212

{"jsonrpc":"2.0","id":"98","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4549

{"id":"98","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"99","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":29},"end":{"line":65,"character":29}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 39

{"id":"99","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6509

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":114},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light2, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 242

{"jsonrpc":"2.0","id":"100","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":61,"character":16}}}
<<<
Content-Length: 42

{"id":"100","jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6509

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":115},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light2, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 111

{"id":8,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":8,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"101","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":58,"character":9}}}
<<<
Content-Length: 245

{"id":"101","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `pump2state`  \n\n---\nType: `bool`  \n\n---\n```cpp\nbool pump2state\n```"},"range":{"end":{"character":12,"line":58},"start":{"character":2,"line":58}}}}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6509

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":116},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light2, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 111

{"id":9,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":9,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"102","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":16}}}
<<<
Content-Length: 217

{"id":"102","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"103","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":18}}}
<<<
Content-Length: 217

{"id":"103","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"104","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":20}}}
<<<
Content-Length: 217

{"id":"104","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}}}}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"105","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":20}}}
<<<
Content-Length: 40

{"id":"105","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"106","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":20},"end":{"line":65,"character":20}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 404

{"id":"106","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":20,"line":65},"start":{"character":20,"line":65}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'light2'"},"kind":"refactor","title":"Expand macro 'light2'"}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"107","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":20},"end":{"line":65,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 797

{"id":"107","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":21,"line":65},"start":{"character":20,"line":65}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'light2'"},"kind":"refactor","title":"Expand macro 'light2'"},{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":21,"line":65},"start":{"character":20,"line":65}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"108","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":21}}}
<<<
Content-Length: 217

{"id":"108","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}}}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":117},"contentChanges":[{"range":{"start":{"line":65,"character":20},"end":{"line":65,"character":21}},"text":"1"}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"109","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"109","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":117}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"110","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"110","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 275

{"jsonrpc":"2.0","id":"111","method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":21},"context":{"triggerKind":1}}}
<<<
Content-Length: 330

{"id":"111","jsonrpc":"2.0","result":{"isIncomplete":false,"items":[{"filterText":"light1","insertText":"light1","insertTextFormat":1,"kind":1,"label":" light1","score":0.92280048131942749,"sortText":"4013c359light1","textEdit":{"newText":"light1","range":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}}}}]}}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"112","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":21},"end":{"line":65,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 404

{"id":"112","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":21,"line":65},"start":{"character":21,"line":65}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'light1'"},"kind":"refactor","title":"Expand macro 'light1'"}]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6509

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":118},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light1, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6509

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":119},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 7\n#define light2 8\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light1, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 112

{"id":10,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":10,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"113","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":10,"character":16}}}
<<<
Content-Length: 40

{"id":"113","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"114","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":10,"character":16},"end":{"line":10,"character":16}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"114","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"115","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":16}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"115","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"116","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":10,"character":15}}}
<<<
Content-Length: 42

{"id":"116","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"117","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":10,"character":15}}}
<<<
Content-Length: 42

{"id":"117","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"118","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":10,"character":15}}}
<<<
Content-Length: 42

{"id":"118","jsonrpc":"2.0","result":null}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":120},"contentChanges":[{"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":16}},"text":"8"}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"119","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"119","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":120}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"120","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"120","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"121","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":10,"character":16},"end":{"line":10,"character":16}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"121","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"122","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":11,"character":16}}}
<<<
Content-Length: 42

{"id":"122","jsonrpc":"2.0","result":null}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"123","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":11,"character":16}}}
<<<
Content-Length: 40

{"id":"123","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"124","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"124","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"125","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":11,"character":15},"end":{"line":11,"character":16}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"125","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"126","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":11,"character":14}}}
<<<
Content-Length: 216

{"id":"126","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `light2`  \n\n---\n```cpp\n#define light2 8\n```"},"range":{"end":{"character":14,"line":11},"start":{"character":8,"line":11}}}}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":121},"contentChanges":[{"range":{"start":{"line":11,"character":15},"end":{"line":11,"character":16}},"text":"7"}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"127","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"127","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":121}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"128","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"128","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"129","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"129","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"130","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":12,"character":17}}}
<<<
Content-Length: 222

{"id":"130","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"end":{"character":17,"line":12},"start":{"character":8,"line":12}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"131","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":12,"character":16}}}
<<<
Content-Length: 222

{"id":"131","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"end":{"character":17,"line":12},"start":{"character":8,"line":12}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"132","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":13,"character":15}}}
<<<
Content-Length: 219

{"id":"132","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `button1`  \n\n---\n```cpp\n#define button1 10\n```"},"range":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"133","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":14,"character":17}}}
<<<
Content-Length: 42

{"id":"133","jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6509

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":122},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light1, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 112

{"id":11,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6509

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":123},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(light1, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 241

{"jsonrpc":"2.0","id":"134","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":14,"character":2}}}
<<<
Content-Length: 42

{"id":"134","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"135","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":15,"character":2}}}
<<<
Content-Length: 42

{"id":"135","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"136","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":13,"character":7}}}
<<<
Content-Length: 42

{"id":"136","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"137","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":12,"character":7}}}
<<<
Content-Length: 42

{"id":"137","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"138","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":12,"character":8}}}
<<<
Content-Length: 222

{"id":"138","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"end":{"character":17,"line":12},"start":{"character":8,"line":12}}}}
>>>
Content-Length: 253

{"jsonrpc":"2.0","id":"139","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":12,"character":8}}}
<<<
Content-Length: 40

{"id":"139","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"140","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":12,"character":16}}}
<<<
Content-Length: 40

{"id":"140","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"141","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":16}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"141","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"142","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":12,"character":8},"end":{"line":12,"character":17}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"142","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"143","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":12,"character":16}}}
<<<
Content-Length: 222

{"id":"143","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"end":{"character":17,"line":12},"start":{"character":8,"line":12}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"144","method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":12,"character":17}}}
<<<
Content-Length: 234

{"id":"144","jsonrpc":"2.0","result":[{"range":{"end":{"character":17,"line":12},"start":{"character":8,"line":12}},"uri":"file:///C:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"145","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":17}}}
<<<
Content-Length: 217

{"id":"145","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `light1`  \n\n---\n```cpp\n#define light1 8\n```"},"range":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"146","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":15}}}
<<<
Content-Length: 217

{"id":"146","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `light1`  \n\n---\n```cpp\n#define light1 8\n```"},"range":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}}}}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"147","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":15}}}
<<<
Content-Length: 397

{"id":"147","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":14,"line":65},"start":{"character":2,"line":65}}},{"kind":1,"range":{"end":{"character":16,"line":162},"start":{"character":4,"line":162}}},{"kind":1,"range":{"end":{"character":16,"line":169},"start":{"character":4,"line":169}}},{"kind":1,"range":{"end":{"character":16,"line":175},"start":{"character":4,"line":175}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"148","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":15},"end":{"line":65,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 797

{"id":"148","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'light1'"},"kind":"refactor","title":"Expand macro 'light1'"},{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}},"tweakID":"ExtractVariable"}],"command":"clangd.applyTweak","title":"Extract subexpression to variable"},"kind":"refactor","title":"Extract subexpression to variable"}]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"149","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":21}}}
<<<
Content-Length: 217

{"id":"149","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `light1`  \n\n---\n```cpp\n#define light1 8\n```"},"range":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"150","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":20}}}
<<<
Content-Length: 217

{"id":"150","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `light1`  \n\n---\n```cpp\n#define light1 8\n```"},"range":{"end":{"character":21,"line":65},"start":{"character":15,"line":65}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"151","method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":21}}}
<<<
Content-Length: 234

{"id":"151","jsonrpc":"2.0","result":[{"range":{"end":{"character":14,"line":10},"start":{"character":8,"line":10}},"uri":"file:///C:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}]}
>>>
Content-Length: 329

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":124},"contentChanges":[{"range":{"start":{"line":65,"character":15},"end":{"line":65,"character":21}},"text":"lightAuto"}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"152","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 112

{"id":12,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":12,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4550

{"id":"152","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":124}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"153","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"153","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"154","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":24},"end":{"line":65,"character":24}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 410

{"id":"154","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":24,"line":65},"start":{"character":24,"line":65}},"tweakID":"ExpandMacro"}],"command":"clangd.applyTweak","title":"Expand macro 'lightAuto'"},"kind":"refactor","title":"Expand macro 'lightAuto'"}]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6512

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":125},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(lightAuto, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 242

{"jsonrpc":"2.0","id":"155","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":19}}}
<<<
Content-Length: 223

{"id":"155","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"end":{"character":24,"line":65},"start":{"character":15,"line":65}}}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"156","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":64,"character":8}}}
<<<
Content-Length: 232

{"id":"156","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `loop`  \n\n---\n→ `void`  \n\n---\n```cpp\nvoid loop()\n```"},"range":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"157","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":5}}}
<<<
Content-Length: 322

{"id":"157","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"end":{"character":14,"line":65},"start":{"character":2,"line":65}}}}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6512

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":126},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 150 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  digitalWrite(lightAuto, HIGH);\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 112

{"id":13,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":13,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"158","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":64,"character":2}}}
<<<
Content-Length: 42

{"id":"158","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"159","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":64,"character":3}}}
<<<
Content-Length: 42

{"id":"159","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"160","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":9}}}
<<<
Content-Length: 322

{"id":"160","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `digitalWrite`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t val`\n\n---\n```cpp\nvoid digitalWrite(uint8_t pin, uint8_t val)\n```"},"range":{"end":{"character":14,"line":65},"start":{"character":2,"line":65}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"161","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":67,"character":10}}}
<<<
Content-Length: 42

{"id":"161","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"162","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":67,"character":11}}}
<<<
Content-Length: 42

{"id":"162","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"163","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":66,"character":13}}}
<<<
Content-Length: 42

{"id":"163","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"164","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":66,"character":14}}}
<<<
Content-Length: 42

{"id":"164","jsonrpc":"2.0","result":null}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"165","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":32},"end":{"line":65,"character":32}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"165","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"166","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":65,"character":32}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"166","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"167","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":1}}}
<<<
Content-Length: 42

{"id":"167","jsonrpc":"2.0","result":null}
>>>
Content-Length: 319

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":127},"contentChanges":[{"range":{"start":{"line":65,"character":1},"end":{"line":65,"character":32}},"text":""}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"168","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"168","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":127}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"169","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"169","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":128},"contentChanges":[{"range":{"start":{"line":65,"character":0},"end":{"line":65,"character":1}},"text":""}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"170","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"170","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":128}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"171","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"171","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 319

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":129},"contentChanges":[{"range":{"start":{"line":64,"character":13},"end":{"line":65,"character":0}},"text":""}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"172","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"172","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":129}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"173","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"173","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"174","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":64,"character":13},"end":{"line":64,"character":13}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"174","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6478

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":130},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 10\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 149 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":130}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"175","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":15,"character":2}}}
<<<
Content-Length: 42

{"id":"175","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"176","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":13,"character":15}}}
<<<
Content-Length: 219

{"id":"176","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `button1`  \n\n---\n```cpp\n#define button1 10\n```"},"range":{"end":{"character":15,"line":13},"start":{"character":8,"line":13}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"177","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":13,"character":17}}}
<<<
Content-Length: 42

{"id":"177","jsonrpc":"2.0","result":null}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"178","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":13,"character":18}}}
<<<
Content-Length: 40

{"id":"178","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"179","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"179","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":131},"contentChanges":[{"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":18}},"text":""}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"180","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 112

{"id":14,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":14,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4550

{"id":"180","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":131}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"181","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"181","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"182","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"182","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":132},"contentChanges":[{"range":{"start":{"line":13,"character":17},"end":{"line":13,"character":17}},"text":"2"}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"183","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"183","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":132}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"184","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"184","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"185","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":13,"character":18},"end":{"line":13,"character":18}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"185","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6478

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":133},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 12\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 149 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 242

{"jsonrpc":"2.0","id":"186","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":13,"character":17}}}
<<<
Content-Length: 42

{"id":"186","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"187","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":15,"character":21}}}
<<<
Content-Length: 42

{"id":"187","jsonrpc":"2.0","result":null}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"188","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":15,"character":21}}}
<<<
Content-Length: 40

{"id":"188","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"189","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":15,"character":21},"end":{"line":15,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"189","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 320

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":134},"contentChanges":[{"range":{"start":{"line":15,"character":20},"end":{"line":15,"character":21}},"text":""}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"190","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 112

{"id":15,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":15,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4550

{"id":"190","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":134}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"191","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"191","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"192","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":15,"character":20},"end":{"line":15,"character":20}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"192","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 321

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":135},"contentChanges":[{"range":{"start":{"line":15,"character":20},"end":{"line":15,"character":20}},"text":"0"}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"193","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"193","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":135}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"194","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"194","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"195","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":15,"character":21},"end":{"line":15,"character":21}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"195","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6478

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":136},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 149 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // // put your main code here, to run repeatedly:\n  // checkButtonPress();\n\n\n  // /* Check if both tanks are below setpoint \n  //  * turn off pumps if tanks are below\n  //  * lock the rest of the loop\n  // */\n\n  // if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n  //   lockState = LOCK;\n  //   pump2state = LOW;\n  //   pump1state = LOW;\n  //   digitalWrite(pump1, pump1state);\n  //   digitalWrite(light1, pump1state);\n  //   digitalWrite(pump2, pump2state);\n  //   digitalWrite(light2, pump2state);\n  // }\n\n\n  // /* Check if any tank is above setpoint \n  //  * unlock the rest of the loop if so\n  // */\n  // if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n  //   lockState = UNLOCK;\n  //   //Serial.println(\"unlock loop\");\n  // }\n\n  // if (lockState == UNLOCK) {\n  //   if (mode == AUTOMATIC) {\n\n  //     /* Check if both pumps are off (first run)\n  //      * turn on pump 1 first and start timing\n  //     */\n  //     if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n  //       pump1state = HIGH;\n  //       digitalWrite(lightAuto, HIGH);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 1 is on and 1 hour has passed\n  //      * turn off pump 1 and turn on pump 2\n  //     */\n  //     if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump2state = HIGH;\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pumpChrono.restart();\n  //     }\n\n  //     /* Check if pump 2 is On and 1 hour has passed\n  //      * turn off pump 2 and turn on pump 1\n  //     */\n  //     if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n  //       pump1state = HIGH;\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pumpChrono.restart();\n  //     }\n  //   } else if (mode == PUMP1) {\n  //     /* turn On pump 1 if not On already\n  //     */\n  //     if (pump1state == LOW) {\n  //       pump2state = LOW;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //       pump1state = HIGH;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //     }\n  //   } else if (mode == PUMP2) {\n  //     /* turn On pump 2 if not On already\n  //     */\n  //     if (pump2state == LOW) {\n  //       pump1state = LOW;\n  //       digitalWrite(pump1, pump1state);\n  //       digitalWrite(light1, pump1state);\n  //       pump2state = HIGH;\n  //       digitalWrite(pump2, pump2state);\n  //       digitalWrite(light2, pump2state);\n  //     }\n  //   }\n  // }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 241

{"jsonrpc":"2.0","id":"196","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":1}}}
<<<
Content-Length: 42

{"id":"196","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"197","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":0}}}
<<<
Content-Length: 42

{"id":"197","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"198","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":66,"character":0}}}
<<<
Content-Length: 42

{"id":"198","jsonrpc":"2.0","result":null}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"199","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":65,"character":1}}}
<<<
Content-Length: 42

{"id":"199","jsonrpc":"2.0","result":null}
>>>
Content-Length: 314

{"jsonrpc":"2.0","id":"200","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":71,"character":7}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"200","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"201","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":155,"character":6}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"201","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 7554

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":218},"contentChanges":[{"range":{"start":{"line":155,"character":2},"end":{"line":155,"character":5}},"text":""},{"range":{"start":{"line":154,"character":2},"end":{"line":154,"character":5}},"text":""},{"range":{"start":{"line":153,"character":2},"end":{"line":153,"character":5}},"text":""},{"range":{"start":{"line":152,"character":2},"end":{"line":152,"character":5}},"text":""},{"range":{"start":{"line":151,"character":2},"end":{"line":151,"character":5}},"text":""},{"range":{"start":{"line":150,"character":2},"end":{"line":150,"character":5}},"text":""},{"range":{"start":{"line":149,"character":2},"end":{"line":149,"character":5}},"text":""},{"range":{"start":{"line":148,"character":2},"end":{"line":148,"character":5}},"text":""},{"range":{"start":{"line":147,"character":2},"end":{"line":147,"character":5}},"text":""},{"range":{"start":{"line":146,"character":2},"end":{"line":146,"character":5}},"text":""},{"range":{"start":{"line":145,"character":2},"end":{"line":145,"character":5}},"text":""},{"range":{"start":{"line":144,"character":2},"end":{"line":144,"character":5}},"text":""},{"range":{"start":{"line":143,"character":2},"end":{"line":143,"character":5}},"text":""},{"range":{"start":{"line":142,"character":2},"end":{"line":142,"character":5}},"text":""},{"range":{"start":{"line":141,"character":2},"end":{"line":141,"character":5}},"text":""},{"range":{"start":{"line":140,"character":2},"end":{"line":140,"character":5}},"text":""},{"range":{"start":{"line":139,"character":2},"end":{"line":139,"character":5}},"text":""},{"range":{"start":{"line":138,"character":2},"end":{"line":138,"character":5}},"text":""},{"range":{"start":{"line":137,"character":2},"end":{"line":137,"character":5}},"text":""},{"range":{"start":{"line":136,"character":2},"end":{"line":136,"character":5}},"text":""},{"range":{"start":{"line":135,"character":2},"end":{"line":135,"character":5}},"text":""},{"range":{"start":{"line":134,"character":2},"end":{"line":134,"character":5}},"text":""},{"range":{"start":{"line":133,"character":2},"end":{"line":133,"character":5}},"text":""},{"range":{"start":{"line":132,"character":2},"end":{"line":132,"character":5}},"text":""},{"range":{"start":{"line":131,"character":2},"end":{"line":131,"character":5}},"text":""},{"range":{"start":{"line":130,"character":2},"end":{"line":130,"character":5}},"text":""},{"range":{"start":{"line":129,"character":2},"end":{"line":129,"character":5}},"text":""},{"range":{"start":{"line":128,"character":2},"end":{"line":128,"character":5}},"text":""},{"range":{"start":{"line":127,"character":2},"end":{"line":127,"character":5}},"text":""},{"range":{"start":{"line":126,"character":2},"end":{"line":126,"character":5}},"text":""},{"range":{"start":{"line":125,"character":2},"end":{"line":125,"character":5}},"text":""},{"range":{"start":{"line":124,"character":2},"end":{"line":124,"character":5}},"text":""},{"range":{"start":{"line":123,"character":2},"end":{"line":123,"character":5}},"text":""},{"range":{"start":{"line":122,"character":2},"end":{"line":122,"character":5}},"text":""},{"range":{"start":{"line":121,"character":2},"end":{"line":121,"character":5}},"text":""},{"range":{"start":{"line":120,"character":2},"end":{"line":120,"character":5}},"text":""},{"range":{"start":{"line":118,"character":2},"end":{"line":118,"character":5}},"text":""},{"range":{"start":{"line":117,"character":2},"end":{"line":117,"character":5}},"text":""},{"range":{"start":{"line":116,"character":2},"end":{"line":116,"character":5}},"text":""},{"range":{"start":{"line":115,"character":2},"end":{"line":115,"character":5}},"text":""},{"range":{"start":{"line":114,"character":2},"end":{"line":114,"character":5}},"text":""},{"range":{"start":{"line":113,"character":2},"end":{"line":113,"character":5}},"text":""},{"range":{"start":{"line":112,"character":2},"end":{"line":112,"character":5}},"text":""},{"range":{"start":{"line":111,"character":2},"end":{"line":111,"character":5}},"text":""},{"range":{"start":{"line":110,"character":2},"end":{"line":110,"character":5}},"text":""},{"range":{"start":{"line":109,"character":2},"end":{"line":109,"character":5}},"text":""},{"range":{"start":{"line":108,"character":2},"end":{"line":108,"character":5}},"text":""},{"range":{"start":{"line":107,"character":2},"end":{"line":107,"character":5}},"text":""},{"range":{"start":{"line":105,"character":2},"end":{"line":105,"character":5}},"text":""},{"range":{"start":{"line":104,"character":2},"end":{"line":104,"character":5}},"text":""},{"range":{"start":{"line":103,"character":2},"end":{"line":103,"character":5}},"text":""},{"range":{"start":{"line":102,"character":2},"end":{"line":102,"character":5}},"text":""},{"range":{"start":{"line":101,"character":2},"end":{"line":101,"character":5}},"text":""},{"range":{"start":{"line":100,"character":2},"end":{"line":100,"character":5}},"text":""},{"range":{"start":{"line":99,"character":2},"end":{"line":99,"character":5}},"text":""},{"range":{"start":{"line":98,"character":2},"end":{"line":98,"character":5}},"text":""},{"range":{"start":{"line":97,"character":2},"end":{"line":97,"character":5}},"text":""},{"range":{"start":{"line":96,"character":2},"end":{"line":96,"character":5}},"text":""},{"range":{"start":{"line":94,"character":2},"end":{"line":94,"character":5}},"text":""},{"range":{"start":{"line":93,"character":2},"end":{"line":93,"character":5}},"text":""},{"range":{"start":{"line":91,"character":2},"end":{"line":91,"character":5}},"text":""},{"range":{"start":{"line":90,"character":2},"end":{"line":90,"character":5}},"text":""},{"range":{"start":{"line":89,"character":2},"end":{"line":89,"character":5}},"text":""},{"range":{"start":{"line":88,"character":2},"end":{"line":88,"character":5}},"text":""},{"range":{"start":{"line":87,"character":2},"end":{"line":87,"character":5}},"text":""},{"range":{"start":{"line":86,"character":2},"end":{"line":86,"character":5}},"text":""},{"range":{"start":{"line":85,"character":2},"end":{"line":85,"character":5}},"text":""},{"range":{"start":{"line":82,"character":2},"end":{"line":82,"character":5}},"text":""},{"range":{"start":{"line":81,"character":2},"end":{"line":81,"character":5}},"text":""},{"range":{"start":{"line":80,"character":2},"end":{"line":80,"character":5}},"text":""},{"range":{"start":{"line":79,"character":2},"end":{"line":79,"character":5}},"text":""},{"range":{"start":{"line":78,"character":2},"end":{"line":78,"character":5}},"text":""},{"range":{"start":{"line":77,"character":2},"end":{"line":77,"character":5}},"text":""},{"range":{"start":{"line":76,"character":2},"end":{"line":76,"character":5}},"text":""},{"range":{"start":{"line":75,"character":2},"end":{"line":75,"character":5}},"text":""},{"range":{"start":{"line":74,"character":2},"end":{"line":74,"character":5}},"text":""},{"range":{"start":{"line":72,"character":2},"end":{"line":72,"character":5}},"text":""},{"range":{"start":{"line":71,"character":2},"end":{"line":71,"character":5}},"text":""},{"range":{"start":{"line":70,"character":2},"end":{"line":70,"character":5}},"text":""},{"range":{"start":{"line":69,"character":2},"end":{"line":69,"character":5}},"text":""},{"range":{"start":{"line":66,"character":2},"end":{"line":66,"character":5}},"text":""},{"range":{"start":{"line":65,"character":2},"end":{"line":65,"character":5}},"text":""}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"202","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 112

{"id":16,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":16,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4550

{"id":"202","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":218}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"203","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"203","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":62},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":156},"start":{"character":0,"line":64}},"selectionRange":{"end":{"character":9,"line":64},"start":{"character":5,"line":64}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":180},"start":{"character":0,"line":157}},"selectionRange":{"end":{"character":21,"line":157},"start":{"character":5,"line":157}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"204","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":65,"character":1},"end":{"line":155,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 403

{"id":"204","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":3,"line":155},"start":{"character":1,"line":65}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"205","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":155,"character":3},"end":{"line":155,"character":3}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"205","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6232

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":219},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 149 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 243

{"jsonrpc":"2.0","id":"206","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":158,"character":23}}}
<<<
Content-Length: 228

{"id":"206","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `buttonAuto`  \n\n---\n```cpp\n#define buttonAuto 10\n```"},"range":{"end":{"character":29,"line":158},"start":{"character":19,"line":158}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"207","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":155,"character":3}}}
<<<
Content-Length: 42

{"id":"207","jsonrpc":"2.0","result":null}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6232

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":220},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 56 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 149 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 112

{"id":17,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":17,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"208","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":154,"character":0}}}
<<<
Content-Length: 42

{"id":"208","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"209","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":154,"character":0}}}
<<<
Content-Length: 42

{"id":"209","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"210","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":120,"character":0}}}
<<<
Content-Length: 42

{"id":"210","jsonrpc":"2.0","result":null}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"211","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":117,"character":0}}}
<<<
Content-Length: 42

{"id":"211","jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"jsonrpc":"2.0","id":"212","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":121,"character":43}}}
<<<
Content-Length: 40

{"id":"212","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 318

{"jsonrpc":"2.0","id":"213","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":121,"character":43},"end":{"line":121,"character":43}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"213","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 243

{"jsonrpc":"2.0","id":"214","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":161,"character":23}}}
<<<
Content-Length: 225

{"id":"214","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"end":{"character":26,"line":161},"start":{"character":17,"line":161}}}}
>>>
Content-Length: 243

{"jsonrpc":"2.0","id":"215","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":160,"character":42}}}
<<<
Content-Length: 42

{"id":"215","jsonrpc":"2.0","result":null}
>>>
Content-Length: 243

{"jsonrpc":"2.0","id":"216","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":160,"character":56}}}
<<<
Content-Length: 42

{"id":"216","jsonrpc":"2.0","result":null}
>>>
Content-Length: 255

{"jsonrpc":"2.0","id":"217","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":160,"character":57}}}
<<<
Content-Length: 40

{"id":"217","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":"218","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":160,"character":0},"end":{"line":160,"character":57}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"218","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 317

{"jsonrpc":"2.0","id":"219","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":159,"character":0},"end":{"line":160,"character":57}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 405

{"id":"219","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":57,"line":160},"start":{"character":0,"line":159}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 243

{"jsonrpc":"2.0","id":"220","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":160,"character":14}}}
<<<
Content-Length: 396

{"id":"220","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### instance-method `put`  \n\n---\n→ `const pump_mode &`  \nParameters:  \n- `int idx`\n- `const pump_mode & t`\n\n---\n```cpp\n// In EEPROMClass\npublic: template <> const pump_mode &put<pump_mode>(int idx, const pump_mode &t)\n```"},"range":{"end":{"character":14,"line":160},"start":{"character":11,"line":160}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"221","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":160,"character":7}}}
<<<
Content-Length: 267

{"id":"221","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `EEPROM`  \n\n---\nType: `struct EEPROMClass`  \n\n---\n```cpp\nstatic EEPROMClass EEPROM\n```"},"range":{"end":{"character":10,"line":160},"start":{"character":4,"line":160}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"222","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":160,"character":8}}}
<<<
Content-Length: 267

{"id":"222","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `EEPROM`  \n\n---\nType: `struct EEPROMClass`  \n\n---\n```cpp\nstatic EEPROMClass EEPROM\n```"},"range":{"end":{"character":10,"line":160},"start":{"character":4,"line":160}}}}
>>>
Content-Length: 243

{"jsonrpc":"2.0","id":"223","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":160,"character":15}}}
<<<
Content-Length: 42

{"id":"223","jsonrpc":"2.0","result":null}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"224","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":58,"character":19},"end":{"line":58,"character":19}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"224","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":221},"contentChanges":[{"range":{"start":{"line":58,"character":19},"end":{"line":58,"character":19}},"text":"\n  "}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"225","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"225","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":65}},"selectionRange":{"end":{"character":9,"line":65},"start":{"character":5,"line":65}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":221}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"226","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"226","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":63},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":157},"start":{"character":0,"line":65}},"selectionRange":{"end":{"character":9,"line":65},"start":{"character":5,"line":65}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":181},"start":{"character":0,"line":158}},"selectionRange":{"end":{"character":21,"line":158},"start":{"character":5,"line":158}}}]}
>>>
Content-Length: 398

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":222},"contentChanges":[{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":2}},"text":"    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM"}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"227","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"227","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":64},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":158},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":9,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":182},"start":{"character":0,"line":159}},"selectionRange":{"end":{"character":21,"line":159},"start":{"character":5,"line":159}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":222}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"228","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"228","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":64},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":158},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":9,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":182},"start":{"character":0,"line":159}},"selectionRange":{"end":{"character":21,"line":159},"start":{"character":5,"line":159}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"229","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":60,"character":57},"end":{"line":60,"character":57}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"229","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6316

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":223},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 58 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 151 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n      mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":223}}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"230","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":57,"character":19},"end":{"line":57,"character":19}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"230","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 406

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":225},"contentChanges":[{"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":2}},"text":""},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":6}},"text":""}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"231","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 112

{"id":18,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":18,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 4550

{"id":"231","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":64},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":158},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":9,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":182},"start":{"character":0,"line":159}},"selectionRange":{"end":{"character":21,"line":159},"start":{"character":5,"line":159}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":225}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"232","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":51,"character":7}}}
<<<
Content-Length: 313

{"id":"232","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### function `pinMode`  \n\n---\n→ `void`  \nParameters:  \n- `uint8_t pin`\n- `uint8_t mode`\n\n---\n```cpp\nvoid pinMode(uint8_t pin, uint8_t mode)\n```"},"range":{"end":{"character":9,"line":51},"start":{"character":2,"line":51}}}}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":226},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 58 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 151 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  mode = AUTOMATIC;\n  EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":227},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 58 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 151 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  mode = AUTOMATIC;\n  EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 112

{"id":19,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":19,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"233","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":34}}}
<<<
Content-Length: 261

{"id":"233","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### variable `mode`  \n\n---\nType: `enum pump_mode`  \n\n---\n```cpp\nstatic enum pump_mode mode\n```"},"range":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"234","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":30,"character":29}}}
<<<
Content-Length: 456

{"id":"234","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enum `pump_mode`  \n\n---\n#define pump1 31  \n#define pump2 27  \n#define floatSwitch1 36  \n#define floatSwitch2 38  \n#define light1 29  \n#define light2 25  \n#define lightAuto 23  \n#define button1 42  \n#define button2 44  \n#define buttonAuto 46  \n\n---\n```cpp\nenum pump_mode {}\n```"},"range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"235","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":30,"character":28}}}
<<<
Content-Length: 275

{"id":"235","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP1`  \n\n---\nType: `enum pump_mode`  \nValue = `1`  \n\n---\n```cpp\n// In pump_mode\nPUMP1\n```"},"range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"236","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":28}}}
<<<
Content-Length: 275

{"id":"236","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"237","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":30,"character":29}}}
<<<
Content-Length: 456

{"id":"237","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enum `pump_mode`  \n\n---\n#define pump1 31  \n#define pump2 27  \n#define floatSwitch1 36  \n#define floatSwitch2 38  \n#define light1 29  \n#define light2 25  \n#define lightAuto 23  \n#define button1 42  \n#define button2 44  \n#define buttonAuto 46  \n\n---\n```cpp\nenum pump_mode {}\n```"},"range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"238","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":27}}}
<<<
Content-Length: 275

{"id":"238","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"239","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":28}}}
<<<
Content-Length: 275

{"id":"239","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"240","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":29}}}
<<<
Content-Length: 275

{"id":"240","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"241","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":29}}}
<<<
Content-Length: 310

{"id":"241","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}},{"kind":1,"range":{"end":{"character":28,"line":145},"start":{"character":23,"line":145}}},{"kind":1,"range":{"end":{"character":16,"line":174},"start":{"character":11,"line":174}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"242","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":31,"character":29},"end":{"line":31,"character":29}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"242","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"243","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":31,"character":24},"end":{"line":31,"character":29}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"243","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"244","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":24}}}
<<<
Content-Length: 275

{"id":"244","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"245","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":24}}}
<<<
Content-Length: 275

{"id":"245","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"246","method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":25}}}
<<<
Content-Length: 235

{"id":"246","jsonrpc":"2.0","result":[{"range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"uri":"file:///C:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"247","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":31,"character":25}}}
<<<
Content-Length: 275

{"id":"247","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `PUMP2`  \n\n---\nType: `enum pump_mode`  \nValue = `2`  \n\n---\n```cpp\n// In pump_mode\nPUMP2\n```"},"range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"248","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":30,"character":30},"end":{"line":30,"character":30}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"248","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"249","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":59,"character":14}}}
<<<
Content-Length: 282

{"id":"249","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `AUTOMATIC`  \n\n---\nType: `enum pump_mode`  \nValue = `0`  \n\n---\n```cpp\n// In pump_mode\nAUTOMATIC\n```"},"range":{"end":{"character":18,"line":59},"start":{"character":9,"line":59}}}}
>>>
Content-Length: 241

{"jsonrpc":"2.0","id":"250","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":59,"character":9}}}
<<<
Content-Length: 282

{"id":"250","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### enumerator `AUTOMATIC`  \n\n---\nType: `enum pump_mode`  \nValue = `0`  \n\n---\n```cpp\n// In pump_mode\nAUTOMATIC\n```"},"range":{"end":{"character":18,"line":59},"start":{"character":9,"line":59}}}}
>>>
Content-Length: 253

{"jsonrpc":"2.0","id":"251","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":59,"character":9}}}
<<<
Content-Length: 396

{"id":"251","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"kind":1,"range":{"end":{"character":18,"line":59},"start":{"character":9,"line":59}}},{"kind":1,"range":{"end":{"character":25,"line":96},"start":{"character":16,"line":96}}},{"kind":1,"range":{"end":{"character":20,"line":161},"start":{"character":11,"line":161}}}]}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"252","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":59,"character":18}}}
<<<
Content-Length: 396

{"id":"252","jsonrpc":"2.0","result":[{"kind":1,"range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"kind":1,"range":{"end":{"character":18,"line":59},"start":{"character":9,"line":59}}},{"kind":1,"range":{"end":{"character":25,"line":96},"start":{"character":16,"line":96}}},{"kind":1,"range":{"end":{"character":20,"line":161},"start":{"character":11,"line":161}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"253","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":59,"character":9},"end":{"line":59,"character":18}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"253","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"254","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":60,"character":20}}}
<<<
Content-Length: 221

{"id":"254","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `expression`  \n\n---\nType: `unsigned int`  \nValue = `2`"},"range":{"end":{"character":23,"line":60},"start":{"character":17,"line":60}}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"255","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":60,"character":19}}}
<<<
Content-Length: 221

{"id":"255","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### `expression`  \n\n---\nType: `unsigned int`  \nValue = `2`"},"range":{"end":{"character":23,"line":60},"start":{"character":17,"line":60}}}}
>>>
Content-Length: 247

{"jsonrpc":"2.0","id":"256","method":"textDocument/definition","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":60,"character":20}}}
<<<
Content-Length: 40

{"id":"256","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 324

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":228},"contentChanges":[{"range":{"start":{"line":59,"character":9},"end":{"line":59,"character":18}},"text":"PUMP2"}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"257","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"257","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":64},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":158},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":9,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":182},"start":{"character":0,"line":159}},"selectionRange":{"end":{"character":21,"line":159},"start":{"character":5,"line":159}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":228}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"258","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"258","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":64},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":158},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":9,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":182},"start":{"character":0,"line":159}},"selectionRange":{"end":{"character":21,"line":159},"start":{"character":5,"line":159}}}]}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"259","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":59,"character":14},"end":{"line":59,"character":14}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"259","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":229},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 58 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 151 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  mode = PUMP2;\n  EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6306

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":230},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 58 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 151 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  mode = PUMP2;\n  EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 112

{"id":20,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":20,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 254

{"jsonrpc":"2.0","id":"260","method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":60,"character":55}}}
<<<
Content-Length: 40

{"id":"260","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"261","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":59,"character":0},"end":{"line":60,"character":55}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 403

{"id":"261","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":55,"line":60},"start":{"character":0,"line":59}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"262","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":60,"character":0},"end":{"line":60,"character":55}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"262","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"263","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":59,"character":0},"end":{"line":60,"character":55}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 403

{"id":"263","jsonrpc":"2.0","result":[{"command":{"arguments":[{"file":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","selection":{"end":{"character":55,"line":60},"start":{"character":0,"line":59}},"tweakID":"ExtractFunction"}],"command":"clangd.applyTweak","title":"Extract to function"},"kind":"refactor","title":"Extract to function"}]}
>>>
Content-Length: 412

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":232},"contentChanges":[{"range":{"start":{"line":60,"character":2},"end":{"line":60,"character":2}},"text":"// "},{"range":{"start":{"line":59,"character":2},"end":{"line":59,"character":2}},"text":"// "}]}}Content-Length: 213

{"jsonrpc":"2.0","id":"264","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"264","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":64},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":158},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":9,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":182},"start":{"character":0,"line":159}},"selectionRange":{"end":{"character":21,"line":159},"start":{"character":5,"line":159}}}]}Content-Length: 634

{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"diagnostics":[{"code":"invalid_width_spec","message":"In included file: 'long type-name' is invalid","range":{"end":{"character":10,"line":3},"start":{"character":9,"line":3}},"relatedInformation":[{"location":{"range":{"end":{"character":15,"line":63},"start":{"character":11,"line":63}},"uri":"file:///C:/Users/DEXTER/Documents/Arduino/libraries/Chrono/Chrono.h"},"message":"Error occurred here"}],"severity":1,"source":"clang"}],"uri":"file:///c:/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":232}}
>>>
Content-Length: 213

{"jsonrpc":"2.0","id":"265","method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}
<<<
Content-Length: 4550

{"id":"265","jsonrpc":"2.0","result":[{"detail":"Chrono","kind":13,"name":"pumpChrono","range":{"end":{"character":34,"line":4},"start":{"character":0,"line":4}},"selectionRange":{"end":{"character":17,"line":4},"start":{"character":7,"line":4}}},{"children":[{"detail":"pump_mode","kind":22,"name":"AUTOMATIC","range":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}},"selectionRange":{"end":{"character":33,"line":29},"start":{"character":24,"line":29}}},{"detail":"pump_mode","kind":22,"name":"PUMP1","range":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}},"selectionRange":{"end":{"character":29,"line":30},"start":{"character":24,"line":30}}},{"detail":"pump_mode","kind":22,"name":"PUMP2","range":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}},"selectionRange":{"end":{"character":29,"line":31},"start":{"character":24,"line":31}}}],"detail":"enum","kind":10,"name":"pump_mode","range":{"end":{"character":31,"line":31},"start":{"character":7,"line":29}},"selectionRange":{"end":{"character":21,"line":29},"start":{"character":12,"line":29}}},{"detail":"enum pump_mode","kind":13,"name":"mode","range":{"end":{"character":36,"line":31},"start":{"character":0,"line":29}},"selectionRange":{"end":{"character":36,"line":31},"start":{"character":32,"line":31}}},{"children":[{"detail":"pump_state","kind":22,"name":"UNLOCK","range":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}},"selectionRange":{"end":{"character":31,"line":32},"start":{"character":25,"line":32}}},{"detail":"pump_state","kind":22,"name":"LOCK","range":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}},"selectionRange":{"end":{"character":29,"line":33},"start":{"character":25,"line":33}}}],"detail":"enum","kind":10,"name":"pump_state","range":{"end":{"character":31,"line":33},"start":{"character":7,"line":32}},"selectionRange":{"end":{"character":22,"line":32},"start":{"character":12,"line":32}}},{"detail":"enum pump_state","kind":13,"name":"lockState","range":{"end":{"character":41,"line":33},"start":{"character":0,"line":32}},"selectionRange":{"end":{"character":41,"line":33},"start":{"character":32,"line":33}}},{"detail":"bool","kind":13,"name":"pump1state","range":{"end":{"character":15,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":15,"line":34},"start":{"character":5,"line":34}}},{"detail":"bool","kind":13,"name":"pump2state","range":{"end":{"character":27,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":27,"line":34},"start":{"character":17,"line":34}}},{"detail":"bool","kind":13,"name":"previousState","range":{"end":{"character":48,"line":34},"start":{"character":0,"line":34}},"selectionRange":{"end":{"character":42,"line":34},"start":{"character":29,"line":34}}},{"detail":"unsigned long","kind":13,"name":"timeCount","range":{"end":{"character":34,"line":35},"start":{"character":0,"line":35}},"selectionRange":{"end":{"character":23,"line":35},"start":{"character":14,"line":35}}},{"detail":"uint8_t","kind":13,"name":"debounce","range":{"end":{"character":21,"line":36},"start":{"character":0,"line":36}},"selectionRange":{"end":{"character":16,"line":36},"start":{"character":8,"line":36}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":12,"line":39},"start":{"character":0,"line":39}},"selectionRange":{"end":{"character":10,"line":39},"start":{"character":5,"line":39}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":11,"line":41},"start":{"character":0,"line":41}},"selectionRange":{"end":{"character":9,"line":41},"start":{"character":5,"line":41}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":23,"line":43},"start":{"character":0,"line":43}},"selectionRange":{"end":{"character":21,"line":43},"start":{"character":5,"line":43}}},{"detail":"void ()","kind":12,"name":"setup","range":{"end":{"character":1,"line":64},"start":{"character":0,"line":45}},"selectionRange":{"end":{"character":10,"line":45},"start":{"character":5,"line":45}}},{"detail":"void ()","kind":12,"name":"loop","range":{"end":{"character":1,"line":158},"start":{"character":0,"line":66}},"selectionRange":{"end":{"character":9,"line":66},"start":{"character":5,"line":66}}},{"detail":"void ()","kind":12,"name":"checkButtonPress","range":{"end":{"character":1,"line":182},"start":{"character":0,"line":159}},"selectionRange":{"end":{"character":21,"line":159},"start":{"character":5,"line":159}}}]}
>>>
Content-Length: 315

{"jsonrpc":"2.0","id":"266","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":59,"character":0},"end":{"line":60,"character":58}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"266","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":"267","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"position":{"line":51,"character":11}}}
<<<
Content-Length: 223

{"id":"267","jsonrpc":"2.0","result":{"contents":{"kind":"markdown","value":"### macro `lightAuto`  \n\n---\n```cpp\n#define lightAuto 9\n```"},"range":{"end":{"character":19,"line":51},"start":{"character":10,"line":51}}}}
>>>
Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":233},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 58 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 151 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  // mode = PUMP2;\n  // EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}Content-Length: 195

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"}}}Content-Length: 6312

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp","version":234},"contentChanges":[{"text":"#include \u003cArduino.h\u003e\n#line 1 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\n#include \u003cEEPROM.h\u003e\n#include \u003cChrono.h\u003e\nChrono pumpChrono(Chrono::SECONDS);\n\n#define pump1 2\n#define pump2 3\n#define floatSwitch1 5\n#define floatSwitch2 6\n#define light1 8\n#define light2 7\n#define lightAuto 9\n#define button1 12\n#define button2 11\n#define buttonAuto 10\n\n// #define pump1 31\n// #define pump2 27\n// #define floatSwitch1 36\n// #define floatSwitch2 38\n// #define light1 29\n// #define light2 25\n// #define lightAuto 23\n// #define button1 42\n// #define button2 44\n// #define buttonAuto 46\n\n\nstatic enum pump_mode { AUTOMATIC,\n                        PUMP1,\n                        PUMP2 } mode;\nstatic enum pump_state { UNLOCK,\n                         LOCK } lockState;\nbool pump1state, pump2state, previousState = LOW;\nunsigned long timeCount = millis();\nuint8_t debounce = 50;\n\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup();\n#line 58 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid loop();\n#line 151 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid checkButtonPress();\n#line 37 \"C:\\\\Users\\\\DEXTER\\\\Downloads\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS\\\\ELENKTIS_MEMFYS.ino\"\nvoid setup() {\n  // put your setup code here, to run once:\n  pinMode(pump1, OUTPUT);\n  pinMode(pump2, OUTPUT);\n  pinMode(light1, OUTPUT);\n  pinMode(light2, OUTPUT);\n  pinMode(lightAuto, OUTPUT);\n  pinMode(button1, INPUT_PULLUP);\n  pinMode(button2, INPUT_PULLUP);\n  pinMode(buttonAuto, INPUT_PULLUP);\n  pinMode(floatSwitch1, INPUT_PULLUP);\n  pinMode(floatSwitch2, INPUT_PULLUP);\n  pump1state = LOW;\n  pump2state = LOW;\n  // mode = PUMP2;\n  // EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n  EEPROM.get(0 * sizeof(mode), mode);  //read EEPROM\n  lockState = UNLOCK;\n  //Serial.begin(9600);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  checkButtonPress();\n\n\n  /* Check if both tanks are below setpoint \n   * turn off pumps if tanks are below\n   * lock the rest of the loop\n  */\n\n  if (digitalRead(floatSwitch1) == LOW \u0026\u0026 digitalRead(floatSwitch2) == LOW \u0026\u0026 lockState == UNLOCK) {\n    lockState = LOCK;\n    pump2state = LOW;\n    pump1state = LOW;\n    digitalWrite(pump1, pump1state);\n    digitalWrite(light1, pump1state);\n    digitalWrite(pump2, pump2state);\n    digitalWrite(light2, pump2state);\n  }\n\n\n  /* Check if any tank is above setpoint \n   * unlock the rest of the loop if so\n  */\n  if ((digitalRead(floatSwitch1) == HIGH || digitalRead(floatSwitch2) == HIGH) \u0026\u0026 lockState == LOCK) {\n    lockState = UNLOCK;\n    //Serial.println(\"unlock loop\");\n  }\n\n  if (lockState == UNLOCK) {\n    if (mode == AUTOMATIC) {\n\n      /* Check if both pumps are off (first run)\n       * turn on pump 1 first and start timing\n      */\n      if (pump1state == LOW \u0026\u0026 pump2state == LOW) {\n        pump1state = HIGH;\n        digitalWrite(lightAuto, HIGH);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 1 is on and 1 hour has passed\n       * turn off pump 1 and turn on pump 2\n      */\n      if (pump1state == HIGH \u0026\u0026 pump2state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump2state = HIGH;\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pumpChrono.restart();\n      }\n\n      /* Check if pump 2 is On and 1 hour has passed\n       * turn off pump 2 and turn on pump 1\n      */\n      if (pump2state == HIGH \u0026\u0026 pump1state == LOW \u0026\u0026 pumpChrono.hasPassed(3600)) {\n        pump1state = HIGH;\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pumpChrono.restart();\n      }\n    } else if (mode == PUMP1) {\n      /* turn On pump 1 if not On already\n      */\n      if (pump1state == LOW) {\n        pump2state = LOW;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n        pump1state = HIGH;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n      }\n    } else if (mode == PUMP2) {\n      /* turn On pump 2 if not On already\n      */\n      if (pump2state == LOW) {\n        pump1state = LOW;\n        digitalWrite(pump1, pump1state);\n        digitalWrite(light1, pump1state);\n        pump2state = HIGH;\n        digitalWrite(pump2, pump2state);\n        digitalWrite(light2, pump2state);\n      }\n    }\n  }\n}\nvoid checkButtonPress() {\n  if (!digitalRead(buttonAuto) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = AUTOMATIC;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, HIGH);\n    pumpChrono.restart();\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button1) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP1;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else if (!digitalRead(button2) \u0026\u0026 previousState == HIGH \u0026\u0026 millis() - timeCount \u003e debounce) {\n    mode = PUMP2;\n    EEPROM.put(0 * sizeof(mode), mode);  //save to EEPROM\n    digitalWrite(lightAuto, LOW);\n    timeCount = millis();\n    previousState = !previousState;\n  } else {\n    previousState = !previousState;\n  }\n}\n"}]}}
<<<
Content-Length: 112

{"id":21,"jsonrpc":"2.0","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":21,"result":null}
<<<
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","percentage":0,"title":"indexing"}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
>>>
Content-Length: 316

{"jsonrpc":"2.0","id":"268","method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/DEXTER/AppData/Local/Temp/arduino-language-server1659788359/sketch/ELENKTIS_MEMFYS.ino.cpp"},"range":{"start":{"line":58,"character":19},"end":{"line":58,"character":19}},"context":{"diagnostics":[]}}}
<<<
Content-Length: 40

{"id":"268","jsonrpc":"2.0","result":[]}
>>>
Content-Length: 62

{"jsonrpc":"2.0","id":"269","method":"shutdown","params":null}
<<<
Content-Length: 42

{"id":"269","jsonrpc":"2.0","result":null}
>>>
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}<<< Read Error: EOF
<<< Read Error: EOF
<<< Read Error: EOF
